<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="LoraWANAppC" loc="6:LoraWANAppC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/opt/tinyos-main-2.1.2/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/opt/tinyos-main-2.1.2/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/opt/tinyos-main-2.1.2/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/opt/tinyos-main-2.1.2/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="52:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/opt/tinyos-main-2.1.2/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LoraWANC" loc="10:LoraWANC.nc" safe="">
      <module/>
    </component>
    <component qname="LoraWANAppC.AMSenderC" loc="47(LoraWANAppC.AMSenderC):/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LoraWANAppC.AMSenderC.SenderC" loc="47(LoraWANAppC.AMSenderC.SenderC):/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LoraWANAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(LoraWANAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LoraWANAppC.AMReceiverC" loc="43(LoraWANAppC.AMReceiverC):/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LoraWANAppC.Timer0" loc="44(LoraWANAppC.Timer0):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb75ce288"/>
            <typename><typedef-ref name="TMilli" ref="0xb75ce450"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7414d50"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb75ce288"/>
            <typename><typedef-ref name="TMilli" ref="0xb75ce450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb75ce288"/>
            <typename><typedef-ref name="TMilli" ref="0xb75ce450"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb75ce288"/>
            <typename><typedef-ref name="TMilli" ref="0xb75ce450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LoraWANAppC.Timer1" loc="44(LoraWANAppC.Timer1):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb7414d50" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7414d50"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb7414f10" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb77cbc58" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb77cbe80" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb77c80e0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb77c82d0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb777f800" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb777fa28" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb777fc50" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb777fe40" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7312958" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7312958"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb7312b38" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb748e010" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb77d3868" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb77d3a80" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb77d3c98" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb7455010" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb732b138" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb732b138"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb74ad2b0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb7409010" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7409010"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb74091d0" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb74a5858" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb74aadf8" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb72e3010" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb72e3010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb76fbd58" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb76fbc00" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb76f9ae0" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb76f9988" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb76fb518" loc="104:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb76f92a8" loc="130:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb780e6e0" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7929888" loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7929da0" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0xb73f0010" loc="38:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0xb73f04e0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0xb73f2bc8" loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb73f09a0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb73f20f8" loc="21:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7434200"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0xb7434428"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb73f26e8" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7434200"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7434428"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb73f2590" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7434200"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7434428"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0xb76d5168" loc="45:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xb7fa78f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76d5010" loc="45:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb76fccd8" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76fcb80" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb76ed6b8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76ed560" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb76ec648" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76ec2e8" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76ec4c8" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb76eece8" loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb76ee350" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76ee010" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76ee1f0" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb743e348" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb743e348"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb743e828" loc="61:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb76fde78" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb76fd918" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb76fdb30" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76fdd10" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb76f6a88" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76f6728" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76f6908" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb76f61c8" loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb76f7b80" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76f7a28" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb76f5898" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76f5540" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb76f5738" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb75063e0" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb750af28" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0xb73fdf28" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7438e40"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb74370c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb73f9508" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb74300c8"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb74302f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb73faa10" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7433950"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7433b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb73f9058" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7433950"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7433b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb73faec0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7433950"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7433b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb73f9b10" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb74300c8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb74302f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb73f99b8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb74300c8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb74302f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xb73fa558" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7438e40"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb74370c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb73fa400" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7438e40"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb74370c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb74a2d58" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb74a2a18" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb74a2bf8" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb749ea18" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb749e6b8" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb749e898" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb749e158" loc="112:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb749fb38" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb749f9e0" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb749d820" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb749d4c8" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb749d6c0" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb72d5580" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb72d5580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb72d5bd0" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb72d5580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb72d5a78" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb72d5580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb75dae90" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb75d7720" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb75d7320" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb75da9a0" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb75da638" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb75da840" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb741e9d0" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb741e9d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb741eb38" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb741aeb0" loc="109:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb741bac8" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb741a868" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb741a518" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
          </variable>
          <variable name="dt" ref="0xb741a708" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb741a010" loc="88:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb7419368" loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb741b188" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb741b030" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741eb38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb741b668" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb780b2a8" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb73fc938" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb73fc938"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb73f5858" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb73f7808" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb73fce30" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb73fc938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb73f7c10" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb73f5cb8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb73f73c8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb73fc938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb73f7270" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb73fc938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb73f5038" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb73f5430" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb76f39d0" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
              <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76f3488" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb76f3668" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76f3848" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0xb77268d0" loc="44:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0xb7726778" loc="44:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0xb7725a38" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0xb7725500" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0xb77256d8" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77258d0" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0xb77241a8" loc="49:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb7725dc8" loc="48:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0xb77263a0" loc="43:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb77250f8" loc="46:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0xb7726d00" loc="45:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb741c8d0" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb741c8d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb741ca38" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741ca38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb741cf20" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb741ca38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb7415960" loc="76:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb7415460" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb7415d60" loc="82:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb77fdbb0" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb77fc010" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb77fd420" loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb77fc7e0" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb77fd7e0" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb77fc3e8" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7800cc8" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb77fd070" loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb76df710" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76df5b8" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb76dd220" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76dd0c8" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb76ddca8" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76ddb50" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0xb768e430" loc="48:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb7691890" loc="48:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0xb7691ab8" loc="49:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7691c90" loc="50:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0xb7691ec8" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0xb768e0b8" loc="52:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0xb768e2b0" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0xb768cc18" loc="60:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb768cac0" loc="60:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0xb768ed48" loc="56:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0xb768c1a8" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0xb768e948" loc="55:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0xb768e7f0" loc="55:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0xb768c6d8" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb768c580" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0xb768b1c0" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb768b068" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb76d3278" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0xb76d5cc0" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0xb76d5ed8" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76d3110" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0xb76d29d0" loc="85:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76d2878" loc="85:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb76d3a18" loc="69:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76d38c0" loc="69:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb76d2388" loc="76:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76d2030" loc="76:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb76d2228" loc="76:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0xb76d1058" loc="87:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb76d2ec0" loc="87:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb7402010" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7402010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb73ff7c8" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb7401f20" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7402500" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7402010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb73ffd58" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb73ffc00" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb73fe210" loc="110:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb74012f8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb7402ea8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb73ff3a0" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7402a78" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7402010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7402920" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7402010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7401700" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7401af8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb76e39e8" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e3890" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb76e8168" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e8010" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb76ea010" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb76ea6a8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76ea550" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb76e7bd8" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e7870" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb76e7a78" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb76e8d50" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e89e8" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb76e8bf0" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb76e5310" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e51b8" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb76e5e48" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e5b18" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb76e5ce8" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb76e47c0" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e4668" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb76e1688" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb76e1328" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
                <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb76e1528" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb76e1f00" loc="195:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7bc4010" loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7bc4918" loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7bc4450" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7508a78" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7508a78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb74ff250" loc="136:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb75020c8" loc="83:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7501220" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7502ec0" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb75010c0" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb7502a18" loc="98:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb74ffbc8" loc="151:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb74ff698" loc="144:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7502558" loc="92:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb7503168" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7503010" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7501c08" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb75018c0" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7501aa8" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7503800" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb75036a8" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7503cd0" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <enum loc="144:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7812530" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip_mreq" loc="266:/usr/include/netinet/in.h" ref="0xb751fb90" defined="" size="I:8" alignment="I:4">
      <field name="imr_multiaddr" ref="0xb751e050" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="imr_interface" ref="0xb751e0b0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
    </struct>
    <union loc="67:/usr/include/stdlib.h" ref="0xb7c6b800" defined="" size="I:4" alignment="I:4">
      <field name="__uptr" ref="0xb7c6b910" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0xb7c6de48"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0xb7c6b970" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fab118" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0xb7fab378" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0xb7fab3d8" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="63:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c" ref="0xb7a65b50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip_mreq_source" loc="275:/usr/include/netinet/in.h" ref="0xb751e230" defined="" size="I:12" alignment="I:4">
      <field name="imr_multiaddr" ref="0xb751e868" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="imr_interface" ref="0xb751e8c8" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="imr_sourceaddr" ref="0xb751e928" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
    </struct>
    <enum loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb743ac98" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="84:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0xb7c6b010" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0xb7c6b120" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0xb7c6b180" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="94:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h" ref="0xb78bfdf0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip_opts" loc="133:/usr/include/i386-linux-gnu/bits/in.h" ref="0xb752f4c8" defined="" size="I:44" alignment="I:4">
      <field name="ip_dst" ref="0xb752f8c0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="ip_opts" ref="0xb752f920" bit-offset="I:32" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="136:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7433400" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0xb7433510" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0xb7433570" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0xb74335d0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0xb7433630" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0xb7433690" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0xb74336f0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0xb7433750" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0xb74337b0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0xb79523d8" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0xb7952810" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0xb7c4f308"/></type-tag>
      </field>
      <field name="it_value" ref="0xb7952870" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0xb7c4f308"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="18:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimRadioMsg.h" ref="0xb78c08a0" defined="" size="I:4" alignment="I:1">
      <field name="strength" ref="0xb78bf270" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0xb7caf5a0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0xb78bf2d0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0xb78bf330" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7caeba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="150:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb74300c8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb74301d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb7430238" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7432b28"/></type-tag>
      </field>
    </union>
    <union loc="167:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb742f3f0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb742f500" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb742f560" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7430f38"/></type-tag>
      </field>
    </union>
    <union loc="90:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c42ef8" defined="" size="I:24" alignment="I:4">
      <field name="__data" ref="0xb7c41050" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:4"><struct-ref name="__pthread_mutex_s" ref="0xb7c438e0"/></type-tag>
      </field>
      <field name="__size" ref="0xb7c410b0" bit-offset="I:0" size="I:24">
        <type-array elements="I:24" size="I:24" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c41110" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="gain_entry" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.h" ref="0xb7999d60" defined="" size="I:16" alignment="I:4">
      <field name="mote" ref="0xb7998288" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0xb79982e8" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0xb7998348" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0xb7999d60"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="138:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7813f48" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_gain_noise" loc="3:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.c" ref="0xb7991148" defined="" size="I:16" alignment="I:4">
      <field name="mean" ref="0xb79914b8" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0xb7991518" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0xb7fb0c28" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/i386-linux-gnu/bits/time.h" ref="0xb7c4f8e0" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0xb7c4fca8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0xb7c75a28"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0xb7c4fd08" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__suseconds_t" ref="0xb7c75f00"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="osockaddr" loc="43:/usr/include/i386-linux-gnu/sys/socket.h" ref="0xb7544e80" defined="" size="I:16" alignment="I:2">
      <field name="sa_family" ref="0xb75412a0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="sa_data" ref="0xb7541300" bit-offset="I:16" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="303:/usr/include/i386-linux-gnu/bits/socket.h" ref="0xb75445a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="122:/usr/include/netinet/in.h" ref="0xb7527438" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fafb38" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7fafd90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="42:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h" ref="0xb75ce288" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb75ce398" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0xb7fb2cf0" size="V:" alignment="V:">
    </attribute>
    <union loc="85:/usr/include/wchar.h" ref="0xb7ae1398" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0xb7ae14a8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0xb7ae1508" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <union loc="133:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7433950" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb7433a60" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb7433ac0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7433400"/></type-tag>
      </field>
    </union>
    <struct loc="153:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7432b28" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0xb7432c38" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0xb7432c98" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0xb7432cf8" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0xb7432d58" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0xb7432db8" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0xb7432e18" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0xb7432e78" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0xb7432ed8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="196:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb742eaf0" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0xb742ec00" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0xb742ec60" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0xb742ecc0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0xb742ed20" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="250:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7427630" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb7427740" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb74277a0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7427210"/></type-tag>
      </field>
    </union>
    <struct loc="64:/usr/include/i386-linux-gnu/sys/select.h" ref="0xb7c4d890" defined="" size="I:128" alignment="I:4">
      <field name="__fds_bits" ref="0xb7c4d9a0" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="long" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__fd_mask" ref="0xb7c4d170"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct name="node" loc="62:/opt/tinyos-main-2.1.2/tos/lib/tossim/heap.c" ref="0xb7a27cb0" defined="" size="I:12" alignment="I:4">
      <field name="data" ref="0xb7a26050" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0xb7a260b0" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="linger" loc="383:/usr/include/i386-linux-gnu/bits/socket.h" ref="0xb75449c0" defined="" size="I:8" alignment="I:4">
      <field name="l_onoff" ref="0xb7544cc0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="l_linger" ref="0xb7544d20" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="120:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7814cf0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="43:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h" ref="0xb75ce6c8" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb75ce7d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="40:/usr/include/netinet/in.h" ref="0xb752d980" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_packet" loc="131:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h" ref="0xb78ba968" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0xb78badf0" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0xb78bbce8"/>
          <typename><typedef-ref name="serial_header_t" ref="0xb78ba760"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0xb78bae50" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="ip_msfilter" loc="325:/usr/include/netinet/in.h" ref="0xb751b040" defined="" size="I:20" alignment="I:4">
      <field name="imsf_multiaddr" ref="0xb751b9e0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="imsf_interface" ref="0xb751ba40" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="imsf_fmode" ref="0xb751baa0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="imsf_numsrc" ref="0xb751bb00" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="imsf_slist" ref="0xb751bb60" bit-offset="I:128" size="I:4">
        <type-array elements="I:1" size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
        </type-array>
      </field>
    </struct>
    <struct loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb74389d0" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0xb7438ae0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0xb7438b40" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0xb7438ba0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0xb7438c00" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0xb7438c60" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="integer"  loc="NONE" ref="0xb7fb2b88" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h" ref="0xb7a6d990" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/opt/tinyos-main-2.1.2/tos/lib/tossim/platform_message.h" ref="0xb78b7010" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0xb78b7350" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0xb78c02d0"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0xb78c0688"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="41:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h" ref="0xb764be28" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb764bf38" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/platform_message.h" ref="0xb78b7630" defined="" size="I:4" alignment="I:1">
      <field name="tossim" ref="0xb78b7998" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0xb78c08a0"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0xb78bf3e8"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0xb7fb0890" size="V:" alignment="V:">
      <field name="fn" ref="0xb7fb09a0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="412:/usr/include/stdlib.h" ref="0xb7c2a210" defined="" size="I:24" alignment="I:4">
      <field name="__x" ref="0xb7c2a9e8" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0xb7c2aa48" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0xb7c2aaa8" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0xb7c2ab08" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0xb7c2ab68" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct loc="82:/usr/include/wchar.h" ref="0xb7ae1688" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0xb7ae1798" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0xb7ae17f8" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7ae1398"/></type-tag>
      </field>
    </struct>
    <struct name="__locale_struct" loc="27:/usr/include/xlocale.h" ref="0xb7c9b838" defined="" size="I:116" alignment="I:4">
      <field name="__locales" ref="0xb7c9a3f8" bit-offset="I:0" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0xb7c9b9d0"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0xb7c9a458" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0xb7c9a4b8" bit-offset="I:448" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0xb7c9a518" bit-offset="I:480" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0xb7c9a578" bit-offset="I:512" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <enum loc="46:/usr/include/ctype.h" ref="0xb7aff688" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb781bb38" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_header" loc="123:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h" ref="0xb78bbce8" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0xb78ba528" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb78c2410"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0xb78ba588" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb78c2410"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0xb78ba5e8" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0xb78ba648" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0xb78c2178"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0xb78ba6a8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0xb78c4dc0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="44:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h" ref="0xb75ceb08" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb75cec18" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="21:/usr/include/_G_config.h" ref="0xb7ae1d28" defined="" size="I:12" alignment="I:4">
      <field name="__pos" ref="0xb7ae1e38" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0xb7c764c0"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0xb7ae1e98" bit-offset="I:32" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7ae1688"/>
          <typename><typedef-ref name="__mbstate_t" ref="0xb7ae18b0"/></typename>
        </type-tag>
      </field>
    </struct>
    <struct loc="202:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c3dab0" defined="" size="I:32" alignment="I:4">
      <field name="__lock" ref="0xb7c3ddc0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0xb7c3de20" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0xb7c3de80" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0xb7c3dee0" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0xb7c3df40" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0xb7c3dfa0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__flags" ref="0xb7c3c018" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__shared" ref="0xb7c3c078" bit-offset="I:200" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__rwelision" ref="0xb7c3c0d8" bit-offset="I:208" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad2" ref="0xb7c3c138" bit-offset="I:216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__writer" ref="0xb7c3c198" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="message_header" loc="50:/opt/tinyos-main-2.1.2/tos/lib/tossim/platform_message.h" ref="0xb78b97e8" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0xb78b9ca0" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0xb78c1638"/>
          <typename><typedef-ref name="tossim_header_t" ref="0xb78c00c8"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0xb78b9d00" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0xb78bbce8"/>
          <typename><typedef-ref name="serial_header_t" ref="0xb78ba760"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0xb7c4f308" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0xb7c4f6f8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0xb7c75a28"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0xb7c4f758" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__syscall_slong_t" ref="0xb7c711e0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fabda8" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0xb7fabf58" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="209:/usr/include/math.h" ref="0xb7b03be8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7815350" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0xb7815460" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0xb78154c0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0xb7815520" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="group_source_req" loc="311:/usr/include/netinet/in.h" ref="0xb751d760" defined="" size="I:260" alignment="I:4">
      <field name="gsr_interface" ref="0xb751dde8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="gsr_group" ref="0xb751de48" bit-offset="I:32" size="I:128">
        <type-tag size="I:128" alignment="I:4"><struct-ref name="sockaddr_storage" ref="0xb75491b8"/></type-tag>
      </field>
      <field name="gsr_source" ref="0xb751dea8" bit-offset="I:1056" size="I:128">
        <type-tag size="I:128" alignment="I:4"><struct-ref name="sockaddr_storage" ref="0xb75491b8"/></type-tag>
      </field>
    </struct>
    <enum loc="76:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h" ref="0xb7a85eb8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fab768" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0xb7fab9c8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0xb7faba28" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb743ce88" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timezone" loc="55:/usr/include/i386-linux-gnu/sys/time.h" ref="0xb79edbb0" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0xb79edf08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0xb79edf68" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="66:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0xb7c6de48" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0xb7c6b328" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0xb7c6b388" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb7c6c730"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0xb7c6b3e8" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb7c6b010"/></type-tag>
      </field>
    </union>
    <union loc="130:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c41668" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0xb7c41778" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c417d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="iovec" loc="43:/usr/include/i386-linux-gnu/bits/uio.h" ref="0xb75520f8" defined="" size="I:8" alignment="I:4">
      <field name="iov_base" ref="0xb7552458" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="iov_len" ref="0xb75524b8" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_event" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_event_queue.h" ref="0xb7a7d5b8" defined="" size="I:28" alignment="I:4">
      <field name="time" ref="0xb7a7b868" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0xb7a7b8c8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="force" ref="0xb7a7b928" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0xb7a7b988" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0xb7a7b9e8" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0xb7a7ba48" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
                  <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0xb7a7bab8" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
                  <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0xb7ae0c08" size="V:" alignment="V:">
    </struct>
    <enum loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb781a170" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="533:/usr/include/i386-linux-gnu/bits/confname.h" ref="0xb7589050" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="50:/usr/include/i386-linux-gnu/bits/waitflags.h" ref="0xb7c7c9f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="tossim_footer" loc="14:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimRadioMsg.h" ref="0xb78c02d0" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0xb78c05d0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ca9018"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="176:/usr/include/libio.h" ref="0xb7ade850" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_packet.h" ref="0xb78cc7a8" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="54:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h" ref="0xb780f010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="139:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c40d28" defined="" size="I:48" alignment="I:4">
      <field name="__data" ref="0xb7c40e38" bit-offset="I:0" size="I:44">
        <type-tag size="I:44" alignment="I:4"><struct-ref ref="0xb7c40518"/></type-tag>
      </field>
      <field name="__size" ref="0xb7c40e98" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c40ef8" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum loc="25:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h" ref="0xb787b9c8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__pthread_internal_slist" loc="81:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c431c0" defined="" size="I:4" alignment="I:4">
      <field name="__next" ref="0xb7c435b8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c431c0"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="69:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0xb7c6c730" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0xb7c6c840" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0xb7c6c8a0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0xb7c6c900" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="156:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c3e4a8" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0xb7c3e5b8" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c3e618" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="174:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c3c5d0" defined="" size="I:32" alignment="I:4">
      <field name="__data" ref="0xb7c3c6e0" bit-offset="I:0" size="I:32">
        <type-tag size="I:32" alignment="I:4"><struct-ref ref="0xb7c3dab0"/></type-tag>
      </field>
      <field name="__size" ref="0xb7c3c740" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c3c7a0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="245:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c3ae40" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0xb7c3af50" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c39010" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <nx_struct name="serial_metadata" loc="136:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h" ref="0xb78b9228" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0xb78b9520" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="134:/usr/include/i386-linux-gnu/bits/types.h" ref="0xb7c76c88" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0xb7c76d98" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="114:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c421b0" defined="" size="I:4" alignment="I:2">
      <field name="__espins" ref="0xb7c422c0" bit-offset="I:0" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__elision" ref="0xb7c42320" bit-offset="I:16" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <attribute name="atmostonce" loc="97:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h" ref="0xb7a6d590" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum name="__itimer_which" loc="91:/usr/include/i386-linux-gnu/sys/time.h" ref="0xb79e9348" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="24:/usr/include/i386-linux-gnu/bits/confname.h" ref="0xb75b19e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="239:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c3a760" defined="" size="I:20" alignment="I:4">
      <field name="__size" ref="0xb7c3a870" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c3a8d0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="group_req" loc="302:/usr/include/netinet/in.h" ref="0xb751d0e0" defined="" size="I:132" alignment="I:4">
      <field name="gr_interface" ref="0xb751d568" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="gr_group" ref="0xb751d5c8" bit-offset="I:32" size="I:128">
        <type-tag size="I:128" alignment="I:4"><struct-ref name="sockaddr_storage" ref="0xb75491b8"/></type-tag>
      </field>
    </struct>
    <union loc="231:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7428010" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb7428120" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb7428180" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb742aae8"/></type-tag>
      </field>
    </union>
    <struct name="cmsghdr" loc="246:/usr/include/i386-linux-gnu/bits/socket.h" ref="0xb7545340" defined="" size="I:12" alignment="I:4">
      <field name="cmsg_len" ref="0xb7545910" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
        </type-int>
      </field>
      <field name="cmsg_level" ref="0xb7545970" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="cmsg_type" ref="0xb75459d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__cmsg_data" ref="0xb7545a30" bit-offset="I:96" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="hwevent"  loc="NONE" ref="0xb7fb0448" size="V:" alignment="V:">
    </attribute>
    <struct name="group_filter" loc="346:/usr/include/netinet/in.h" ref="0xb751bcd0" defined="" size="I:268" alignment="I:4">
      <field name="gf_interface" ref="0xb751a6c8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="gf_group" ref="0xb751a728" bit-offset="I:32" size="I:128">
        <type-tag size="I:128" alignment="I:4"><struct-ref name="sockaddr_storage" ref="0xb75491b8"/></type-tag>
      </field>
      <field name="gf_fmode" ref="0xb751a788" bit-offset="I:1056" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="gf_numsrc" ref="0xb751a7e8" bit-offset="I:1088" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="gf_slist" ref="0xb751a848" bit-offset="I:1120" size="I:128">
        <type-array elements="I:1" size="I:128" alignment="I:4">
          <type-tag size="I:128" alignment="I:4"><struct-ref name="sockaddr_storage" ref="0xb75491b8"/></type-tag>
        </type-array>
      </field>
    </struct>
    <enum loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb743a508" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE" loc="241:/usr/include/libio.h" ref="0xb7ae4770" defined="" size="I:148" alignment="I:4">
      <field name="_flags" ref="0xb7adbb60" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0xb7adbbc0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0xb7adbc20" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0xb7adbc80" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0xb7adbce0" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0xb7adbd40" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0xb7adbda0" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0xb7adbe00" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0xb7adbe60" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0xb7adbec0" bit-offset="I:288" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0xb7adbf20" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0xb7adbf80" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0xb7ad9010" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0xb7ade0c8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0xb7ad90f0" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0xb7ad9150" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0xb7ad91b0" bit-offset="I:480" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0xb7ad9210" bit-offset="I:512" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0xb7c764c0"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0xb7ad9270" bit-offset="I:544" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0xb7ad92d0" bit-offset="I:560" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0xb7ad9330" bit-offset="I:568" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0xb7ad9390" bit-offset="I:576" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0xb7ae0eb0"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0xb7ad93f0" bit-offset="I:608" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0xb7c76740"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0xb7ad9450" bit-offset="I:672" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0xb7ad94b0" bit-offset="I:704" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0xb7ad9510" bit-offset="I:736" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0xb7ad9670" bit-offset="I:768" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0xb7ad96d0" bit-offset="I:800" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0xb7ad9730" bit-offset="I:832" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0xb7ad9790" bit-offset="I:864" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="pthread_attr_t" loc="63:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c458a8" defined="" size="I:36" alignment="I:4">
      <field name="__size" ref="0xb7c45c48" bit-offset="I:0" size="I:36">
        <type-array elements="I:36" size="I:36" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c45ca8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="hashtable" ref="0xb7a6dc90" size="V:" alignment="V:">
    </struct>
    <enum loc="102:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h" ref="0xb78bd940" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="heap" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/heap.h" ref="0xb7a2b570" defined="" size="I:12" alignment="I:4">
      <field name="size" ref="0xb7a2b9b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0xb7a2ba10" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0xb7a2ba70" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="saved_msg" loc="23:LoraWAN.h" ref="0xb7897b60" defined="" size="I:15" alignment="I:1">
      <field name="node" ref="0xb787b270" bit-offset="I:0" size="I:5">
        <type-array elements="I:5" size="I:5" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="id" ref="0xb787b2d0" bit-offset="I:40" size="I:5">
        <type-array elements="I:5" size="I:5" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="content" ref="0xb787b330" bit-offset="I:80" size="I:5">
        <type-array elements="I:5" size="I:5" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <attribute name="safe"  loc="NONE" ref="0xb7fb0d90" size="V:" alignment="V:">
    </attribute>
    <enum loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7815738" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sockaddr_in6" loc="254:/usr/include/netinet/in.h" ref="0xb751f040" defined="" size="I:28" alignment="I:4">
      <field name="sin6_family" ref="0xb751f8c8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="sa_family_t" ref="0xb754c980"/></typename>
        </type-int>
      </field>
      <field name="sin6_port" ref="0xb751f928" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="in_port_t" ref="0xb75272d8"/></typename>
        </type-int>
      </field>
      <field name="sin6_flowinfo" ref="0xb751f988" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="sin6_addr" ref="0xb751f9e8" bit-offset="I:64" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0xb7524f08"/></type-tag>
      </field>
      <field name="sin6_scope_id" ref="0xb751fa48" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="105:/usr/include/stdlib.h" ref="0xb7c694c8" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0xb7c695d8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0xb7c69638" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="_IO_marker" loc="156:/usr/include/libio.h" ref="0xb7ade0c8" defined="" size="I:12" alignment="I:4">
      <field name="_next" ref="0xb7ade5e8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0xb7ade0c8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0xb7ade648" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0xb7ade6a8" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="26:/opt/tinyos-main-2.1.2/tos/types/AM.h" ref="0xb78c1010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ipv6_mreq" loc="290:/usr/include/netinet/in.h" ref="0xb751ea88" defined="" size="I:20" alignment="I:4">
      <field name="ipv6mr_multiaddr" ref="0xb751ef00" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0xb7524f08"/></type-tag>
      </field>
      <field name="ipv6mr_interface" ref="0xb751ef60" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="193:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb742ef28" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb742d050" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb742d0b0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb742eaf0"/></type-tag>
      </field>
    </union>
    <struct loc="253:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7427210" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0xb7427320" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0xb7427380" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0xb74273e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0xb7427440" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="312:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7420b10" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb7420c20" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb7420c80" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7420620"/></type-tag>
      </field>
    </union>
    <struct name="random_data" loc="343:/usr/include/stdlib.h" ref="0xb7c36288" defined="" size="I:28" alignment="I:4">
      <field name="fptr" ref="0xb7c36b98" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7fa7d78"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0xb7c36bf8" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7fa7d78"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0xb7c36c58" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7fa7d78"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0xb7c36cb8" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0xb7c36d18" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0xb7c36d78" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0xb7c36dd8" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7fa7d78"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0xb79532a8" defined="" size="I:44" alignment="I:4">
      <field name="tm_sec" ref="0xb7953e30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0xb7953e90" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0xb7953ef0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0xb7953f50" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0xb7952010" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0xb7952070" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0xb79520d0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0xb7952130" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0xb7952190" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0xb79521f0" bit-offset="I:288" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_zone" ref="0xb7952250" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c" ref="0xb7a66ab8" defined="" size="I:8" alignment="I:4">
      <field name="num" ref="0xb7a66e88" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0xb7a66ee8" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/>
              <typename><typedef-ref name="FILE" ref="0xb7ae49b0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="52:/usr/include/i386-linux-gnu/sys/socket.h" ref="0xb75413e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sockaddr_in" loc="239:/usr/include/netinet/in.h" ref="0xb75200e0" defined="" size="I:16" alignment="I:4">
      <field name="sin_family" ref="0xb7520d68" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="sa_family_t" ref="0xb754c980"/></typename>
        </type-int>
      </field>
      <field name="sin_port" ref="0xb7520dc8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="in_port_t" ref="0xb75272d8"/></typename>
        </type-int>
      </field>
      <field name="sin_addr" ref="0xb7520e28" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="sin_zero" ref="0xb7520e88" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="ip_mreqn" loc="140:/usr/include/i386-linux-gnu/bits/in.h" ref="0xb752fa78" defined="" size="I:12" alignment="I:4">
      <field name="imr_multiaddr" ref="0xb752d010" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="imr_address" ref="0xb752d070" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="imr_ifindex" ref="0xb752d0d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="radio_stats" loc="109:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h" ref="0xb78bc4f8" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0xb78bb668" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0xb78bb6c8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0xb78bb728" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0xb78bb788" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0xb78bb7e8" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0xb78bb848" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0xb78bb8a8" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0xb78bb908" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0xb78bb968" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0xb78bb9c8" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0xb78bba28" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fa9da8" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7fa9f80" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fa8340" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0xb7fa85c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0xb7fa8628" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0xb7fa8688" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb74408c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atleastonce" loc="98:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h" ref="0xb7a6d790" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="170:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7430f38" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0xb742f070" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0xb742f0d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0xb742f130" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0xb742f190" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb742f1f0" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0xb742f250" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="126:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb78132b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="224:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c3cd28" defined="" size="I:8" alignment="I:4">
      <field name="__size" ref="0xb7c3ce38" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c3ce98" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb781b0e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="itimerval" loc="107:/usr/include/i386-linux-gnu/sys/time.h" ref="0xb79e9b48" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0xb79e9f80" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0xb7c4f8e0"/></type-tag>
      </field>
      <field name="it_value" ref="0xb79e7010" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0xb7c4f8e0"/></type-tag>
      </field>
    </struct>
    <nx_struct name="lora_msg" loc="7:LoraWAN.h" ref="0xb7b39bf0" defined="" size="I:5" alignment="I:1">
      <field name="type" ref="0xb78973e8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
      <field name="id" ref="0xb7897448" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
      <field name="sender" ref="0xb78974a8" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
      <field name="content" ref="0xb7897508" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
      <field name="gateway" ref="0xb7897568" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="in6_addr" loc="211:/usr/include/netinet/in.h" ref="0xb7524f08" defined="" size="I:16" alignment="I:4">
      <field name="__in6_u" ref="0xb7522990" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><union-ref ref="0xb7522670"/></type-tag>
      </field>
    </struct>
    <struct loc="300:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb74210f0" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0xb7421200" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0xb7421260" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0xb74212c0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0xb7421320" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0xb7421380" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0xb74213e0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb7421440" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c" ref="0xb7a66678" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fa9328" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0xb7fa94d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="sigevent" ref="0xb79529b8" size="V:" alignment="V:">
    </struct>
    <struct ref="0xb7fb9f48" size="V:" alignment="V:">
    </struct>
    <enum name="__socket_type" loc="24:/usr/include/i386-linux-gnu/bits/socket_type.h" ref="0xb754d3b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="27:/usr/include/i386-linux-gnu/bits/sigset.h" ref="0xb7c50c78" defined="" size="I:128" alignment="I:4">
      <field name="__val" ref="0xb7c50d88" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fa9840" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7fa9a18" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="234:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb742aae8" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0xb742abf8" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0xb742ac58" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb742acb8" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0xb742ad18" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0xb742ad78" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__locale_data" ref="0xb7c9b9d0" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0xb7fb0728" size="V:" alignment="V:">
    </attribute>
    <struct name="in_addr" loc="31:/usr/include/netinet/in.h" ref="0xb752f070" defined="" size="I:4" alignment="I:4">
      <field name="s_addr" ref="0xb752f2d0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="in_addr_t" ref="0xb7530e88"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="112:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c425c0" defined="" size="I:4" alignment="I:4">
      <field name="__elision_data" ref="0xb7c426d0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb7c421b0"/></type-tag>
      </field>
      <field name="__list" ref="0xb7c42730" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c431c0"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0xb7c43670"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="150:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7811580" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0xb7811690" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0xb78116f0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0xb7811750" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0xb78117b0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0xb7811810" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0xb7811870" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="90:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb74396b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="unsafe"  loc="NONE" ref="0xb7fb0ef8" size="V:" alignment="V:">
    </attribute>
    <struct name="in_pktinfo" loc="148:/usr/include/i386-linux-gnu/bits/in.h" ref="0xb752d238" defined="" size="I:12" alignment="I:4">
      <field name="ipi_ifindex" ref="0xb752d770" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ipi_spec_dst" ref="0xb752d7d0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
      <field name="ipi_addr" ref="0xb752d830" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0xb752f070"/></type-tag>
      </field>
    </struct>
    <union loc="213:/usr/include/netinet/in.h" ref="0xb7522670" defined="" size="I:16" alignment="I:4">
      <field name="__u6_addr8" ref="0xb7522780" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__u6_addr16" ref="0xb75227e0" bit-offset="I:0" size="I:16">
        <type-array elements="I:8" size="I:16" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__u6_addr32" ref="0xb7522840" bit-offset="I:0" size="I:16">
        <type-array elements="I:4" size="I:16" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
          </type-int>
        </type-array>
      </field>
    </union>
    <struct name="sockaddr_storage" loc="166:/usr/include/i386-linux-gnu/bits/socket.h" ref="0xb75491b8" defined="" size="I:128" alignment="I:4">
      <field name="ss_family" ref="0xb7549a08" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="sa_family_t" ref="0xb754c980"/></typename>
        </type-int>
      </field>
      <field name="__ss_padding" ref="0xb7549a68" bit-offset="I:16" size="I:122">
        <type-array elements="I:122" size="I:122" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__ss_align" ref="0xb7549ac8" bit-offset="I:992" size="I:4">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="673:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h" ref="0xb78642e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h" ref="0xb79e3870" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="315:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7420620" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0xb7420730" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0xb7420790" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0xb74207f0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0xb7420850" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0xb74208b0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0xb7420910" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb7420970" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fa70f8" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7fa72d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="26:/usr/include/_G_config.h" ref="0xb7ae0490" defined="" size="I:16" alignment="I:4">
      <field name="__pos" ref="0xb7ae05a0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0xb7c76740"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0xb7ae0600" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7ae1688"/>
          <typename><typedef-ref name="__mbstate_t" ref="0xb7ae18b0"/></typename>
        </type-tag>
      </field>
    </struct>
    <struct name="exception" loc="372:/usr/include/math.h" ref="0xb7b01788" defined="" size="I:32" alignment="I:4">
      <field name="type" ref="0xb7b01ce8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0xb7b01d48" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0xb7b01da8" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0xb7b01e08" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0xb7b01e68" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="_IO_FILE_plus" ref="0xb7ad9b80" size="V:" alignment="V:">
    </struct>
    <struct loc="280:/usr/include/inttypes.h" ref="0xb7d8e3b0" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0xb7d8e4c0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0xb7d8e520" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c" ref="0xb7a65228" defined="" size="I:16" alignment="I:4">
      <field name="name" ref="0xb7a65838" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0xb7a65898" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0xb7a658f8" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0xb7a65958" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/>
              <typename><typedef-ref name="FILE" ref="0xb7ae49b0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct loc="123:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7435da8" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0xb7435eb8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0xb7435f18" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0xb7435f78" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0xb7434010" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb7434070" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="117:/usr/include/stdlib.h" ref="0xb7c69af8" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0xb7c69c08" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0xb7c69c68" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0xb7fb02e0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h" ref="0xb79e18e8" defined="" size="I:480" alignment="I:4">
      <field name="key" ref="0xb79e02a0" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0xb79e0300" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0xb79e0360" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0xb79e03c0" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0xb79e0420" bit-offset="I:256" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0xb79e0480" bit-offset="I:288" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum loc="211:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb742d948" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="347:/usr/include/math.h" ref="0xb7b02838" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="macro"  loc="NONE" ref="0xb7fb0a58" size="V:" alignment="V:">
      <field name="macro_name" ref="0xb7fb0b68" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="97:/usr/include/stdlib.h" ref="0xb7c6beb8" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0xb7c69010" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0xb7c69070" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="51:/opt/tinyos-main-2.1.2/tos/types/TinyError.h" ref="0xb7fad2d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7438e40" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb7438f50" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb7437010" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb74389d0"/></type-tag>
      </field>
    </union>
    <struct loc="141:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c40518" defined="" size="I:44" alignment="I:4">
      <field name="__lock" ref="0xb7c40628" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0xb7c40688" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0xb7c406e8" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0xb7c40748" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0xb7c407a8" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0xb7c40808" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0xb7c40868" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0xb7c408c8" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="120:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb7434200" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb7434310" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb7434370" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7435da8"/></type-tag>
      </field>
    </union>
    <enum loc="185:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb742f778" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/opt/tinyos-main-2.1.2/tos/types/message.h" ref="0xb78b7c30" defined="" size="I:41" alignment="I:1">
      <field name="header" ref="0xb78b6858" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0xb78b68b8" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0xb78b6918" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0xb78b6978" bit-offset="I:296" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimRadioMsg.h" ref="0xb78c1638" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0xb78c1e60" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb78c2410"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0xb78c1ec0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb78c2410"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0xb78c1f20" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0xb78c1f80" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0xb78c2178"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0xb78c0010" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0xb78c4dc0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="18:LoraWAN.h" ref="0xb7897760" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="175:/usr/include/i386-linux-gnu/bits/socket.h" ref="0xb7549ba8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="msghdr" loc="228:/usr/include/i386-linux-gnu/bits/socket.h" ref="0xb75465a0" defined="" size="I:28" alignment="I:4">
      <field name="msg_name" ref="0xb7546fa0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="msg_namelen" ref="0xb7545018" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0xb75cc948"/></typename>
        </type-int>
      </field>
      <field name="msg_iov" ref="0xb7545078" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="iovec" ref="0xb75520f8"/></type-tag>
        </type-pointer>
      </field>
      <field name="msg_iovlen" ref="0xb75450d8" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
        </type-int>
      </field>
      <field name="msg_control" ref="0xb7545138" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="msg_controllen" ref="0xb7545198" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
        </type-int>
      </field>
      <field name="msg_flags" ref="0xb75451f8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="132:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7813928" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="87:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h" ref="0xb78bf838" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="297:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb74215e8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb74216f8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb7421758" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb74210f0"/></type-tag>
      </field>
    </union>
    <struct name="sim_noise_node_t" loc="73:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h" ref="0xb79e0820" defined="" size="I:68" alignment="I:4">
      <field name="key" ref="0xb79de798" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0xb79de7f8" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0xb79de858" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0xb79de8b8" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0xb79de918" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0xb7a6dc90"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0xb79de978" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0xb79de9d8" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0xb79dea38" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0xb79dea98" bit-offset="I:512" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="126:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h" ref="0xb781c160" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/opt/tinyos-main-2.1.2/tos/types/AM.h" ref="0xb78c2c40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="71:/usr/include/i386-linux-gnu/bits/confname.h" ref="0xb75ae4d8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sockaddr" loc="153:/usr/include/i386-linux-gnu/bits/socket.h" ref="0xb754cb78" defined="" size="I:16" alignment="I:2">
      <field name="sa_family" ref="0xb754cf88" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="sa_family_t" ref="0xb754c980"/></typename>
        </type-int>
      </field>
      <field name="sa_data" ref="0xb7549010" bit-offset="I:16" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0xb7fb05b8" size="V:" alignment="V:">
    </attribute>
    <enum loc="99:/usr/include/netinet/in.h" ref="0xb7528190" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0xb7fa8a18" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0xb7fa8ca0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0xb7fa8d00" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0xb7fa8d60" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_mutex_s" loc="92:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c438e0" defined="" size="I:24" alignment="I:4">
      <field name="__lock" ref="0xb7c42890" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0xb7c428f0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0xb7c42950" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0xb7c429b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0xb7c42a10" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__elision_data" ref="0xb7c42a70" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb7c421b0"/></type-tag>
      </field>
      <field name="__list" ref="0xb7c42ad0" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c431c0"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0xb7c43670"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0xb7896c70" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc" ref="0xb76f1c70" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc" ref="0xb76f1358" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc" ref="0xb7693638" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc" ref="0xb7649878" defined="" scoped="" size="I:48" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0xb7648940" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0xb76489a0" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0xb7648a00" bit-offset="I:96" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0xb7648a60" bit-offset="I:160" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0xb7648ac0" bit-offset="I:224" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0xb7648b20" bit-offset="I:288" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0xb7fa78f8"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0xb7648b80" bit-offset="I:296" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0xb7648be0" bit-offset="I:304" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0xb7648c40" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
            <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0xb7648ca0" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0xb7649878"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0xb7649b58"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="47:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc" ref="0xb74912a0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc" ref="0xb7490d60" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc" ref="0xb748f730" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc" ref="0xb748a128" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0xb748a238" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
            <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc" ref="0xb732da80" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" ref="0xb7311858" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0xb73f4d70" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" ref="0xb7308940" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0xb7308a50" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0xb7308ab0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0xb7308b10" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0xb7308b70" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0xb7308bd0" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" ref="0xb730abd0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="randCM" ref="0xb796ba80" loc="39:/opt/tinyos-main-2.1.2/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0xb78f7b20" loc="283:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0xb79da010" loc="52:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="test" ref="0xb7969010" loc="41:/opt/tinyos-main-2.1.2/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__timezone" ref="0xb79460f0" loc="284:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optarg" ref="0xb7563a08" loc="57:/usr/include/getopt.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="channelTable" ref="0xb7a63750" loc="68:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0xb7a6dc90"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0xb7936d60" loc="58:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:68000" alignment="I:4">
        <type-tag size="I:68" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0xb79e0820"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0xb79deb50"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0xb7a63498" loc="67:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c">
      <type-array elements="I:198" size="I:1584" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0xb7a66ab8"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0xb7a65010"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0xb7947c90" loc="282:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0xb796b620" loc="39:/opt/tinyos-main-2.1.2/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="optind" ref="0xb7563c00" loc="71:/usr/include/getopt.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="timezone" ref="0xb7946ca0" loc="298:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="eventHeap" ref="0xb7a01c80" loc="44:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0xb7a2b570"/>
        <typename><typedef-ref name="heap_t" ref="0xb7a2bb28"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0xb79b0cf8" loc="54:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0xb79360c0" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__environ" ref="0xb75b8010" loc="546:/usr/include/unistd.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-pointer>
    </variable>
    <variable name="randC" ref="0xb796b790" loc="39:/opt/tinyos-main-2.1.2/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0xb7936990" loc="56:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0xb79b18e0" loc="47:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0xb79b01a0" loc="50:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0xb7936690" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0xb7946a80" loc="297:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0xb79b0478" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0xb7ad9e30" loc="315:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0xb7ad9b80"/></type-tag>
    </variable>
    <variable name="randCD" ref="0xb796b908" loc="39:/opt/tinyos-main-2.1.2/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="j97" ref="0xb796bda0" loc="40:/opt/tinyos-main-2.1.2/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="in6addr_any" ref="0xb7522bd0" loc="229:/usr/include/netinet/in.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0xb7524f08"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="TOS_NODE_ID" ref="0xb7a83478" loc="78:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0xb7a8a508" loc="27:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="tzname" ref="0xb79463a0" loc="289:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0xb7a27a58" loc="58:/opt/tinyos-main-2.1.2/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="opterr" ref="0xb7563df8" loc="76:/usr/include/getopt.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="=va_arg" ref="0xb7fb2128"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0xb7ad7448" loc="317:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0xb7ad9b80"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0xb79b1668" loc="46:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0xb79b0758" loc="52:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0xb7827220" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0xb7991e10" loc="10:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:4">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0xb7991148"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0xb79915d0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0xb7ad7150" loc="316:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0xb7ad9b80"/></type-tag>
    </variable>
    <variable name="csmaInitLow" ref="0xb79b13e0" loc="45:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0xb7936408" loc="52:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_ticks" ref="0xb79dcd80" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
      </type-int>
    </variable>
    <variable name="__daylight" ref="0xb7947ea0" loc="283:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0xb7ac88a0" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0xb79919f8" loc="9:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:4004" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0xb7999d60"/>
            <typename><typedef-ref name="gain_entry_t" ref="0xb7998400"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0xb7a8a250" loc="26:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0xb7ac8380" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0xb79bf6d8" loc="183:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0xb79da210" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0xb7b015a8" loc="359:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0xb7b02838"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0xb7b012c0"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0xb7990048" loc="11:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0xb7b03a68" loc="168:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0xb79b1140" loc="44:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optopt" ref="0xb7562010" loc="80:/usr/include/getopt.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdout" ref="0xb7ac8610" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0xb79af010" loc="55:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0xb79b1bc0" loc="48:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0xb79b0a40" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="in6addr_loopback" ref="0xb7522ec8" loc="230:/usr/include/netinet/in.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0xb7524f08"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0xb79b1ea0" loc="49:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0xb796bc48" loc="40:/opt/tinyos-main-2.1.2/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0xb7895e00" loc="66:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0xb7895848" loc="60:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0xb7895638" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0xb7895b28" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:7" size="I:7" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0xb78941b8" loc="67:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0xb7728470" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
          <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0xb7728010" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0xb7724d38" loc="50:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0xb77281f8" loc="52:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0xb76d1ee0" loc="62:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
        <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0xb76d8190" loc="63:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
          <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0xb768f408" loc="78:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0xb768bd80" loc="70:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0xb76548f0" loc="294:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0xb7690370" loc="72:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0xb76905f0" loc="73:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0xb7690840" loc="74:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
          <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0xb7690068" loc="71:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0xb768f678" loc="80:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
        <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0xb7690f08" loc="76:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0xb7690bf8" loc="75:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0xb768f1b0" loc="77:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0xb762b560" loc="201:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0xb764ae08" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0xb762b010" loc="198:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0xb7649680" loc="62:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0xb762bc10" loc="203:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0xb7646010" loc="79:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0xb7649878"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0xb7649b58"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0xb762b878" loc="202:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
          <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0xb762b238" loc="200:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0xb7649328" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0xb764abe8" loc="58:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
          <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0xb7649048" loc="60:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0xb75d9f28" loc="67:/opt/tinyos-main-2.1.2/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0xb75d9d00" loc="66:/opt/tinyos-main-2.1.2/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0xb75d9a30" loc="65:/opt/tinyos-main-2.1.2/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="msg_val" ref="0xb74facd8" loc="39:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="locked" ref="0xb74fa728" loc="35:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="flag_ack" ref="0xb74f7390" loc="51:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="server_fd" ref="0xb74f7930" loc="56:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_msg" ref="0xb74f9270" loc="41:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-tag size="I:5" alignment="I:1"><nx_struct-ref name="lora_msg" ref="0xb7b39bf0"/>
        <typename><typedef-ref name="lora_msg_t" ref="0xb7897620"/></typename>
      </type-tag>
    </variable>
    <variable name="saved_msg" ref="0xb74f9010" loc="40:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-tag size="I:15" alignment="I:1"><nx_struct-ref name="saved_msg" ref="0xb7897b60"/>
        <typename><typedef-ref name="saved_msg_t" ref="0xb787b3e8"/></typename>
      </type-tag>
    </variable>
    <variable name="current_type" ref="0xb74f94c0" loc="43:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="address" ref="0xb74f7748" loc="55:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sockaddr_in" ref="0xb75200e0"/></type-tag>
    </variable>
    <variable name="server_node" ref="0xb74f70d8" loc="50:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="current_content" ref="0xb74f9bc0" loc="46:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="new_socket" ref="0xb74f7ad0" loc="56:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="packet" ref="0xb74fa530" loc="33:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
        <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
      </type-tag>
    </variable>
    <variable name="addrlen" ref="0xb74f7ca0" loc="57:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="message_len" ref="0xb74f6280" loc="59:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_id" ref="0xb74f96f8" loc="44:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="i" ref="0xb74f9da0" loc="48:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="message" ref="0xb74f6088" loc="58:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-array elements="I:100" size="I:100" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="id_index" ref="0xb74faa18" loc="38:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="current_sender" ref="0xb74f9958" loc="45:LoraWANC.nc">
      <component-ref qname="LoraWANC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0xb748a508" loc="59:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0xb748a960" loc="60:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0xb748a128"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0xb748a2f0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0xb748ae60" loc="61:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="base" ref="0xb73f4c30" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0xb73f48b0" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0xb73f46b8" loc="38:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0xb73f4a00" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0xb73b3198" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0xb73b4e80" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0xb734f8b8" loc="480:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
          <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0xb73a05a8" loc="185:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
          <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0xb73b63c8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0xb73b60d0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0xb7326708" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0xb7326920" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0xb7307270" loc="69:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0xb7307010" loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0xb7308940"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0xb7308c88"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="seed" ref="0xb72cfa68" loc="52:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
      </type-int>
    </variable>
  </variables>
  <constants>
    <constant cst="I:128" name="_SC_XBS5_LPBIG_OFFBIG" ref="0xb7598a18" loc="346:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="_SC_PRIORITIZED_IO" ref="0xb75ade28" loc="99:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="_SC_XOPEN_REALTIME_THREADS" ref="0xb7597058" loc="353:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACIE" ref="0xb783b268" loc="1075:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0xb78477d0" loc="943:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0xb7836208" loc="1132:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0xb783db18" loc="1058:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0xb7817d30" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0xb7870348" loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0xb7875640" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0xb7854220" loc="786:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0xb7828e48" loc="1299:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0xb7813b88" loc="133:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0xb742b298" loc="222:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0xb7817240" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0xb7861f00" loc="705:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0xb78483d8" loc="924:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0xb7837af8" loc="1126:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0xb78341d8" loc="1154:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0xb7849ae0" loc="919:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0xb78328f0" loc="1182:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1107" name="_CS_XBS5_ILP32_OFFBIG_LINTFLAGS" ref="0xb7586010" loc="586:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="IPPORT_MTP" ref="0xb7526d48" loc="135:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0xb783ab68" loc="1093:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="_SC_MONOTONIC_CLOCK" ref="0xb7595208" loc="390:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0xb7839e90" loc="1106:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0xb784deb0" loc="876:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0xb784a398" loc="902:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0xb78bd7e0" loc="98:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0xb7862630" loc="687:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0xb784c628" loc="882:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0xb78450e8" loc="961:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0xb7c7cb08" loc="52:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0xb785cf18" loc="763:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0xb785fe78" loc="730:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0xb782ae48" loc="1275:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="_SC_PII_OSI_COTS" ref="0xb75a1e40" loc="207:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0xb7b02a30" loc="349:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:143" name="_SC_FD_MGMT" ref="0xb75966a0" loc="378:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0xb742be20" loc="227:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0xb784e590" loc="858:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0xb7849ca8" loc="920:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0xb742b950" loc="225:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0xb781adb8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0xb786abb0" loc="269:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0xb7860b88" loc="714:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="_SC_MAPPED_FILES" ref="0xb75ac3d0" loc="105:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0xb7850aa8" loc="839:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="_SC_TZNAME_MAX" ref="0xb75ad0e8" loc="85:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SHUT_RD" ref="0xb7541578" loc="54:/usr/include/i386-linux-gnu/sys/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0xb7afa498" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="_SC_IOV_MAX" ref="0xb75a1828" loc="201:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0xb786fed8" loc="169:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="_SC_INT_MAX" ref="0xb759beb0" loc="296:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0xb7847438" loc="939:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="_SC_DEVICE_IO" ref="0xb75960f0" loc="372:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0xb781bd70" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0xb7836c28" loc="1138:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0xb7833370" loc="1166:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0xb7869cb0" loc="283:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0xb7846b78" loc="956:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0xb7831a98" loc="1194:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0xb782e1e8" loc="1222:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:145" name="_SC_PIPE" ref="0xb75969c0" loc="382:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1128" name="_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS" ref="0xb7582428" loc="629:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="_SC_REALTIME_SIGNALS" ref="0xb75ad680" loc="91:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:83" name="_SC_NPROCESSORS_CONF" ref="0xb759e890" loc="250:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0xb743c750" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0xb784f568" loc="847:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0xb783a270" loc="1086:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="_SC_SIGQUEUE_MAX" ref="0xb75a9690" loc="142:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0xb78620f0" loc="684:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0xb7868bd8" loc="298:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0xb785c9d8" loc="760:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="_SC_SELECT" ref="0xb75a13f8" loc="197:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0xb7852b38" loc="817:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0xb7842cb8" loc="1004:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0xb742c6b0" loc="217:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0xb7877230" loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:107" name="_SC_WORD_BIT" ref="0xb759a438" loc="302:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0xb784f010" loc="844:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0xb782fe60" loc="1218:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0xb782c568" loc="1246:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0xb7846648" loc="953:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0xb7814228" loc="109:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0xb742b738" loc="224:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0xb784a1d0" loc="901:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:168" name="_SC_2_PBS" ref="0xb75925a8" loc="428:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0xb786fcb8" loc="166:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0xb781c5b0" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:103" name="IPPROTO_PIM" ref="0xb7529338" loc="80:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0xb743ab38" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0xb7439ec0" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0xb7838598" loc="1112:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0xb7440cf0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="_SC_MEMORY_PROTECTION" ref="0xb75ac970" loc="111:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:84" name="_SC_NPROCESSORS_ONLN" ref="0xb759ea98" loc="252:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0xb785ece0" loc="740:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:188" name="_SC_LEVEL1_DCACHE_SIZE" ref="0xb7590c90" loc="471:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0xb783a9a0" loc="1092:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0xb782b8a0" loc="1261:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0xb7afdda8" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0xb78bc308" loc="106:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0xb7877c58" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="_SC_BC_SCALE_MAX" ref="0xb75a9dd8" loc="153:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="_SC_PAGESIZE" ref="0xb75abeb0" loc="133:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0xb786e998" loc="182:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0xb786f450" loc="154:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0xb79e2890" loc="56:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0xb78460e8" loc="948:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0xb7842af0" loc="1003:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1111" name="_CS_XBS5_LP64_OFF64_LINTFLAGS" ref="0xb7586928" loc="594:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1104" name="_CS_XBS5_ILP32_OFFBIG_CFLAGS" ref="0xb7587870" loc="580:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="IPPORT_TIMESERVER" ref="0xb7526700" loc="132:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="_SC_2_SW_DEV" ref="0xb75a2610" loc="180:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="_SC_BARRIERS" ref="0xb75973f8" loc="358:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0xb7855578" loc="779:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:72" name="_SC_TTY_NAME_MAX" ref="0xb759f010" loc="227:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:192" name="_SC_LEVEL2_CACHE_ASSOC" ref="0xb758f588" loc="479:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0xb7852438" loc="811:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:95" name="_SC_2_CHAR_TERM" ref="0xb759def8" loc="276:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0xb7851208" loc="821:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0xb782b6d0" loc="1258:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0xb7854cc0" loc="794:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0xb78298e8" loc="1283:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0xb78423b0" loc="997:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0xb7816678" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:103" name="_SC_CHAR_MIN" ref="0xb759bd08" loc="294:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:187" name="_SC_LEVEL1_ICACHE_LINESIZE" ref="0xb7590a78" loc="469:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:244" name="_SC_TRACE_SYS_MAX" ref="0xb758d9e0" loc="518:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SOCK_DCCP" ref="0xb754c010" loc="39:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:513" name="IPPORT_WHOSERVER" ref="0xb75245d0" loc="151:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0xb74392e0" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0xb786d230" loc="194:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="_SC_CHARCLASS_NAME_MAX" ref="0xb75a8b90" loc="167:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0xb7856d68" loc="773:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0xb7864b88" loc="679:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0xb785fca0" loc="727:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0xb7819688" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0xb7819d40" loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0xb785f568" loc="721:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0xb78bfc50" loc="89:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:148" name="_SC_FILE_SYSTEM" ref="0xb7595010" loc="388:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0xb7840ac0" loc="1025:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:164" name="_SC_TIMEOUTS" ref="0xb7593e00" loc="420:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:190" name="_SC_LEVEL1_DCACHE_LINESIZE" ref="0xb758f160" loc="475:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0xb7812780" loc="145:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="_SC_PII" ref="0xb75a2960" loc="185:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0xb7b02ba8" loc="350:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0xb742c8f8" loc="218:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0xb7fadb88" loc="56:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0xb78129b0" loc="146:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="_SC_SHARED_MEMORY_OBJECTS" ref="0xb75ab010" loc="117:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0xb786add0" loc="272:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="MSG_SYN" ref="0xb75470f8" loc="202:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1133" name="_CS_POSIX_V7_ILP32_OFF32_LDFLAGS" ref="0xb75811a0" loc="640:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0xb782a390" loc="1267:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0xb7828010" loc="1289:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="_CS_V7_WIDTH_RESTRICTED_ENVS" ref="0xb7589cd0" loc="551:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0xb7840e48" loc="1027:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IPPORT_ECHO" ref="0xb75275f8" loc="124:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:524288" name="SOCK_CLOEXEC" ref="0xb754c438" loc="49:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_PC_VDISABLE" ref="0xb75b09c0" loc="42:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SOCK_RDM" ref="0xb754db40" loc="34:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1141" name="_CS_POSIX_V7_LP64_OFF64_LDFLAGS" ref="0xb7580690" loc="656:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0xb7835a90" loc="1148:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0xb78321d0" loc="1176:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0xb78308d0" loc="1204:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0xb782d010" loc="1232:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0xb7854b00" loc="793:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0xb7848cc8" loc="933:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0xb782ea58" loc="1227:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0xb7855ae0" loc="782:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0xb7844b60" loc="980:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0xb782b1c0" loc="1255:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1139" name="_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS" ref="0xb75801b8" loc="652:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1109" name="_CS_XBS5_LP64_OFF64_LDFLAGS" ref="0xb7586498" loc="590:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0xb743c010" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="_PC_REC_INCR_XFER_SIZE" ref="0xb75af4e8" loc="54:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="IPPROTO_MPLS" ref="0xb7529b90" loc="88:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="IPPROTO_SCTP" ref="0xb7529758" loc="84:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:237" name="_SC_V7_ILP32_OFF32" ref="0xb758ec00" loc="502:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0xb783f038" loc="1030:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:89" name="_SC_XOPEN_VERSION" ref="0xb759d3d0" loc="263:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0xb78762b8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:102" name="_SC_CHAR_MAX" ref="0xb759bb50" loc="292:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0xb7877440" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0xb786a580" loc="264:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0xb785f010" loc="718:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0xb743c278" loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0xb786dec0" loc="216:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0xb78537a0" loc="802:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0xb7829200" loc="1277:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0xb78288f0" loc="1296:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSG_DONTROUTE" ref="0xb7548150" loc="181:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0xb78612a0" loc="696:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0xb784e910" loc="860:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0xb78375a0" loc="1123:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0xb786b038" loc="238:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0xb78bdb38" loc="103:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0xb7870130" loc="139:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0xb7835c68" loc="1151:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="MSG_FIN" ref="0xb7548ee8" loc="200:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:520" name="IPPORT_ROUTESERVER" ref="0xb7524818" loc="152:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="_SC_RE_DUP_MAX" ref="0xb75a8978" loc="165:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="_SC_BC_STRING_MAX" ref="0xb75a8010" loc="155:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="_SC_NZERO" ref="0xb759a798" loc="306:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="_SC_UINT_MAX" ref="0xb75993d0" loc="320:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0xb7839980" loc="1103:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0xb7871a80" loc="134:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="_PC_REC_MIN_XFER_SIZE" ref="0xb75af908" loc="58:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5000" name="IPPORT_USERRESERVED" ref="0xb7524cc0" loc="158:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0xb7812198" loc="139:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0xb7838e58" loc="1117:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0xb7835550" loc="1145:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0xb7833c20" loc="1173:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0xb7830390" loc="1201:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0xb7813dc8" loc="134:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="IPPROTO_EGP" ref="0xb752b620" loc="52:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0xb743cc38" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0xb79e1238" loc="60:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0xb7869660" loc="278:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0xb742bbb8" loc="226:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0xb785e778" loc="735:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0xb782a8f0" loc="1272:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0xb782a1d0" loc="1266:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0xb7829e18" loc="1288:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1115" name="_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS" ref="0xb75852c8" loc="602:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1125" name="_CS_POSIX_V6_LP64_OFF64_LDFLAGS" ref="0xb7584b98" loc="623:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0xb784f8f0" loc="849:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0xb784f1d8" loc="845:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0xb7849200" loc="912:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0xb781c360" loc="127:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0xb784d958" loc="873:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0xb7aaf2f0" loc="60:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="IPPROTO_ICMPV6" ref="0xb75289f8" loc="107:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="_SC_C_LANG_SUPPORT_R" ref="0xb7597980" loc="364:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:185" name="_SC_LEVEL1_ICACHE_SIZE" ref="0xb7590618" loc="465:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0xb7840590" loc="1022:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0xb78186c0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0xb7868e00" loc="301:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0xb78676d0" loc="313:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:160" name="_SC_SPORADIC_SERVER" ref="0xb7593600" loc="412:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0xb7afac48" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0xb783fe50" loc="1040:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0xb783a0a8" loc="1085:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0xb7851750" loc="826:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="IPPROTO_DSTOPTS" ref="0xb7528e30" loc="111:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0xb7814f18" loc="121:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0xb786cbc8" loc="232:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0xb784b858" loc="894:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0xb78459b8" loc="968:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:161" name="_SC_THREAD_SPORADIC_SERVER" ref="0xb7593840" loc="414:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0xb78527c0" loc="815:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0xb7875a70" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0xb78600e8" loc="706:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="_SC_EQUIV_CLASS_MAX" ref="0xb75a8410" loc="159:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0xb7831200" loc="1187:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0xb782f908" loc="1215:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0xb782c010" loc="1243:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0xb786eba8" loc="185:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:165" name="_SC_TYPED_MEMORY_OBJECTS" ref="0xb7592058" loc="422:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0xb786e568" loc="176:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="MSG_PROXY" ref="0xb7548538" loc="190:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0xb7846478" loc="950:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="_SC_AIO_LISTIO_MAX" ref="0xb75ab200" loc="119:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="_SC_PII_OSI_CLTS" ref="0xb75a0058" loc="209:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="_SC_AIO_MAX" ref="0xb75ab3a8" loc="121:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0xb7868130" loc="287:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0xb781a7a0" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0xb7818490" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0xb7815d88" loc="107:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0xb782d8d0" loc="1237:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:169" name="_SC_2_PBS_ACCOUNTING" ref="0xb75927b0" loc="430:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0xb786fa98" loc="163:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0xb785d600" loc="745:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0xb7871ea0" loc="136:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0xb786a9a0" loc="268:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:61" name="_SC_PII_INTERNET_STREAM" ref="0xb75a1a48" loc="203:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="_SC_2_FORT_DEV" ref="0xb75a2290" loc="176:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:514" name="IPPORT_CMDSERVER" ref="0xb7525f18" loc="146:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0xb78551d8" loc="775:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0xb7fadf20" loc="58:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0xb7819b08" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0xb7818250" loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0xb79e3a88" loc="52:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SHUT_WR" ref="0xb75416f8" loc="56:/usr/include/i386-linux-gnu/sys/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0xb7817b00" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0xb7852ce0" loc="818:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0xb783bb48" loc="1082:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0xb7847b60" loc="945:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0xb7836568" loc="1134:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0xb7834c68" loc="1162:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0xb7870bb0" loc="146:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0xb786bcb0" loc="254:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:119" name="_SC_NL_ARGMAX" ref="0xb7599910" loc="327:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0xb787bb98" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0xb7874330" loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:75" name="_SC_THREAD_STACK_MIN" ref="0xb759f690" loc="233:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:117" name="_SC_ULONG_MAX" ref="0xb7599590" loc="322:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0xb7837e88" loc="1128:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0xb7834568" loc="1156:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0xb7832c80" loc="1184:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0xb782f3b0" loc="1212:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0xb784ae40" loc="910:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0xb78619b0" loc="700:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:70" name="_SC_GETPW_R_SIZE_MAX" ref="0xb75a0bd8" loc="223:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="_SC_SCHAR_MIN" ref="0xb759acd8" loc="312:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0xb783e580" loc="1044:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1124" name="_CS_POSIX_V6_LP64_OFF64_CFLAGS" ref="0xb7584928" loc="621:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0xb7842e88" loc="1005:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:94" name="IPPROTO_BEETPH" ref="0xb752ae90" loc="76:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="IPPROTO_AH" ref="0xb752aa70" loc="72:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0xb7838208" loc="1108:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0xb78439d8" loc="992:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0xb7856810" loc="770:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0xb78629b0" loc="689:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0xb78403c8" loc="1021:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0xb742e160" loc="189:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0xb784c9c8" loc="884:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:74" name="_SC_THREAD_KEYS_MAX" ref="0xb759f488" loc="231:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:172" name="_SC_2_PBS_TRACK" ref="0xb7592d48" loc="436:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="_SC_THREAD_SAFE_FUNCTIONS" ref="0xb75a07c8" loc="219:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0xb78562b0" loc="765:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_SC_NGROUPS_MAX" ref="0xb75aeb58" loc="79:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0xb7813138" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1129" name="_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS" ref="0xb75826b0" loc="631:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0xb742c468" loc="216:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0xb784bbf0" loc="896:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1119" name="_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS" ref="0xb7585ca8" loc="611:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0xb7850e08" loc="841:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:193" name="_SC_LEVEL2_CACHE_LINESIZE" ref="0xb758f7c0" loc="481:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0xb783d058" loc="1052:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1002" name="_CS_LFS_LIBS" ref="0xb75882a8" loc="559:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:94" name="_SC_XOPEN_SHM" ref="0xb759dd28" loc="273:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0xb79e3ce0" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0xb78452a8" loc="962:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:146" name="_SC_FILE_ATTRIBUTES" ref="0xb7596bb8" loc="384:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0xb7877838" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0xb78470a8" loc="937:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0xb78336d0" loc="1168:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0xb7831df8" loc="1196:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0xb782e548" loc="1224:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0xb782cc68" loc="1252:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="_SC_RTSIG_MAX" ref="0xb75a90e0" loc="136:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="IPPORT_SMTP" ref="0xb75264c0" loc="131:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1118" name="_CS_POSIX_V6_ILP32_OFF32_LIBS" ref="0xb7585a18" loc="609:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0xb783a600" loc="1088:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="_SC_SCHAR_MAX" ref="0xb759ab18" loc="310:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0xb7862470" loc="686:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0xb78430e0" loc="985:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0xb7818b20" loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0xb7b03d88" loc="211:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="_SC_VERSION" ref="0xb75abcf8" loc="131:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0xb78689b0" loc="295:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:92" name="_SC_XOPEN_CRYPT" ref="0xb759d978" loc="269:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0xb74398b8" loc="91:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0xb79e2d40" loc="58:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0xb743a2a8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0xb7875ea0" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0xb783c7d0" loc="1067:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0xb782c8f8" loc="1248:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0xb784fc70" loc="851:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0xb79e9748" loc="97:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0xb78493c0" loc="913:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65" name="_SC_PII_OSI_M" ref="0xb75a0218" loc="211:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:105" name="_SC_INT_MIN" ref="0xb759a0c8" loc="298:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:182" name="_SC_TRACE_EVENT_FILTER" ref="0xb7590058" loc="458:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1147" name="_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS" ref="0xb757f6a8" loc="668:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:195" name="_SC_LEVEL3_CACHE_ASSOC" ref="0xb758fbe8" loc="485:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0xb784a010" loc="900:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0xb783c0a8" loc="1063:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0xb786d440" loc="197:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="_SC_FIFO" ref="0xb7596830" loc="380:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="MSG_CTRUNC" ref="0xb7548348" loc="188:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0xb7838918" loc="1114:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0xb7835010" loc="1142:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_PC_MAX_INPUT" ref="0xb75b1ec0" loc="30:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0xb785c648" loc="756:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:77" name="IPPORT_RJE" ref="0xb7525208" loc="138:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0xb785e940" loc="736:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:158" name="_SC_SIGNALS" ref="0xb7593270" loc="408:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0xb782bc20" loc="1263:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0xb785c0f0" loc="753:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0xb785c2b8" loc="754:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0xb7848928" loc="929:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0xb784d400" loc="870:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0xb786cdf0" loc="235:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:73" name="_SC_THREAD_DESTRUCTOR_ITERATIONS" ref="0xb759f290" loc="229:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:78" name="_SC_THREAD_ATTR_STACKSIZE" ref="0xb759fd18" loc="239:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:79" name="_SC_THREAD_PRIORITY_SCHEDULING" ref="0xb759e010" loc="241:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:179" name="_SC_V6_LPBIG_OFFBIG" ref="0xb7591aa8" loc="451:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0xb784ec90" loc="864:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0xb7843d68" loc="994:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="_SC_C_LANG_SUPPORT" ref="0xb7597778" loc="362:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0xb786daa0" loc="210:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0xb7842580" loc="998:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0xb783d5b8" loc="1055:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0xb783cd18" loc="1072:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0xb7854058" loc="785:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0xb7853ed8" loc="808:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0xb7851058" loc="820:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0xb7829c48" loc="1285:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="IPPROTO_UDP" ref="0xb752ba20" loc="56:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:92" name="IPPROTO_MTP" ref="0xb752ac70" loc="74:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1100" name="_CS_XBS5_ILP32_OFF32_CFLAGS" ref="0xb7588eb8" loc="572:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0xb7867058" loc="304:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0xb786f228" loc="151:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0xb7868348" loc="288:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="IPPROTO_MH" ref="0xb7527068" loc="113:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SOCK_DGRAM" ref="0xb754d770" loc="29:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0xb78467f8" loc="954:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0xb783bd08" loc="1083:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:85" name="_SC_PHYS_PAGES" ref="0xb759ec60" loc="254:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0xb78392a0" loc="1097:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:95" name="IPPORT_SUPDUP" ref="0xb7525858" loc="141:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0xb78178d0" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0xb7814440" loc="110:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0xb7b021f8" loc="217:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0xb784b2e8" loc="891:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0xb785f8f8" loc="723:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0xb783e908" loc="1046:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0xb7869a98" loc="282:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="_SC_XOPEN_XPG4" ref="0xb759b7e0" loc="287:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:142" name="_SC_DEVICE_SPECIFIC_R" ref="0xb75964f8" loc="376:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1101" name="_CS_XBS5_ILP32_OFF32_LDFLAGS" ref="0xb7587178" loc="574:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0xb7867b08" loc="319:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0xb7828390" loc="1291:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1105" name="_CS_XBS5_ILP32_OFFBIG_LDFLAGS" ref="0xb7587ad0" loc="582:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0xb7a83058" loc="76:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0xb7fadd50" loc="57:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1123" name="_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS" ref="0xb75846c0" loc="619:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:151" name="_SC_SINGLE_PROCESS" ref="0xb75955e0" loc="394:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="_SC_REGEXP" ref="0xb7595d30" loc="402:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0xb780fef0" loc="61:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:87" name="_SC_ATEXIT_MAX" ref="0xb759d030" loc="258:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="_SC_NL_NMAX" ref="0xb7599e40" loc="333:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="_SC_SHRT_MIN" ref="0xb7599058" loc="316:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:197" name="_SC_LEVEL4_CACHE_SIZE" ref="0xb758e058" loc="489:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0xb7832550" loc="1178:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0xb7830c50" loc="1206:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0xb782d390" loc="1234:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0xb780fa70" loc="58:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:236" name="_SC_RAW_SOCKETS" ref="0xb758ea10" loc="499:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0xb7853970" loc="803:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0xb743b0a8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0xb785d7c8" loc="746:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:150" name="_SC_MULTI_PROCESS" ref="0xb75953f0" loc="392:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0xb7b02d28" loc="351:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0xb7862d38" loc="691:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0xb784a8e0" loc="905:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1007" name="_CS_LFS64_LINTFLAGS" ref="0xb7588c18" loc="569:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0xb783ad28" loc="1094:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="_SC_XOPEN_LEGACY" ref="0xb7598bf8" loc="349:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1135" name="_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS" ref="0xb7581690" loc="644:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0xb781c838" loc="129:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0xb783f730" loc="1034:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0xb7836058" loc="1131:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0xb7855e78" loc="784:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0xb7a668a8" loc="48:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0xb7877010" loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0xb7828c80" loc="1298:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0xb74394f0" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="_SC_PII_XTI" ref="0xb75a2b08" loc="187:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0xb7439cd0" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1005" name="_CS_LFS64_LDFLAGS" ref="0xb7588858" loc="565:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1113" name="_CS_XBS5_LPBIG_OFFBIG_LDFLAGS" ref="0xb7586de0" loc="598:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0xb7861620" loc="698:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0xb7861d40" loc="704:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0xb786b878" loc="250:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0xb7848218" loc="923:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0xb7837930" loc="1125:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0xb7834010" loc="1153:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0xb7832728" loc="1181:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IPPROTO_HOPOPTS" ref="0xb7528378" loc="101:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0xb7844620" loc="977:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0xb78440e0" loc="974:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0xb7839ce0" loc="1105:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="_PC_REC_MAX_XFER_SIZE" ref="0xb75af6f8" loc="56:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0xb78188f0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0xb784c458" loc="881:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0xb786b668" loc="247:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="_SC_LONG_BIT" ref="0xb759a280" loc="300:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0xb785cd58" loc="762:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0xb7869010" loc="273:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0xb7869ec8" loc="284:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0xb785e3e8" loc="733:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0xb782ac80" loc="1274:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1122" name="_CS_POSIX_V6_ILP32_OFFBIG_LIBS" ref="0xb7584428" loc="617:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="_SC_LINE_MAX" ref="0xb75a87b0" loc="163:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="_SC_SHRT_MAX" ref="0xb759ae90" loc="314:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0xb784cf28" loc="887:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0xb7819010" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0xb78609c8" loc="713:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:180" name="_SC_HOST_NAME_MAX" ref="0xb7591c90" loc="454:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0xb784dce8" loc="875:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0xb79e2288" loc="55:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1073741824" name="MSG_CMSG_CLOEXEC" ref="0xb7546180" loc="219:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:177" name="_SC_V6_ILP32_OFFBIG" ref="0xb75916c8" loc="447:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SOCK_STREAM" ref="0xb754d578" loc="26:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:93" name="_SC_XOPEN_ENH_I18N" ref="0xb759db68" loc="271:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0xb7836a78" loc="1137:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0xb78331c0" loc="1165:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0xb7af9bd8" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0xb78469b8" loc="955:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0xb78318e8" loc="1193:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0xb782e038" loc="1221:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0xb7867280" loc="307:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:79" name="IPPORT_FINGER" ref="0xb7525420" loc="139:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0xb784f3a0" loc="846:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0xb786e130" loc="172:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0xb7853238" loc="799:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0xb7851ad0" loc="828:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0xb78503b8" loc="835:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0xb785df00" loc="752:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0xb783e200" loc="1042:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0xb785c818" loc="759:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="_SC_2_C_DEV" ref="0xb75a20c8" loc="174:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0xb7afbcc0" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0xb783f570" loc="1033:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0xb743bcd0" loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0xb7860478" loc="708:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0xb7874760" loc="105:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0xb7842010" loc="995:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0xb782fc98" loc="1217:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0xb782c3a0" loc="1245:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0xb7864800" loc="677:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="_PC_PIPE_BUF" ref="0xb75b0448" loc="36:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:247" name="_SC_THREAD_ROBUST_PRIO_INHERIT" ref="0xb758c188" loc="526:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="_SC_BASE" ref="0xb7597588" loc="360:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0xb7864f08" loc="681:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="_SC_2_FORT_RUN" ref="0xb75a2458" loc="178:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="_SC_MESSAGE_PASSING" ref="0xb75acb68" loc="113:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IPPROTO_IP" ref="0xb752db38" loc="42:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1132" name="_CS_POSIX_V7_ILP32_OFF32_CFLAGS" ref="0xb7582e20" loc="638:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="_SC_REGEX_VERSION" ref="0xb7595f18" loc="404:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0xb7870dd0" loc="149:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0xb781a390" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0xb7815960" loc="105:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0xb78383d8" loc="1111:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1108" name="_CS_XBS5_LP64_OFF64_CFLAGS" ref="0xb7586250" loc="588:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0xb780fc70" loc="59:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1001" name="_CS_LFS_LDFLAGS" ref="0xb75880f0" loc="557:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0xb785d270" loc="743:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0xb783a7d8" loc="1091:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0xb78198c8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="_SC_READER_WRITER_LOCKS" ref="0xb75959c8" loc="398:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0xb783dcf8" loc="1061:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="_PC_ALLOC_SIZE_MIN" ref="0xb75afce8" loc="62:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0xb7814878" loc="112:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="_SC_JOB_CONTROL" ref="0xb75ad2b8" loc="87:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="_SC_MQ_OPEN_MAX" ref="0xb75ab980" loc="127:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0xb78176a0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:246" name="_SC_XOPEN_STREAMS" ref="0xb758ddf8" loc="523:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0xb786a138" loc="258:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0xb7847ef0" loc="947:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0xb78368c8" loc="1136:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0xb7842928" loc="1002:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0xb7870560" loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0xb7833010" loc="1164:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0xb7831738" loc="1192:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0xb7b02ea8" loc="352:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="MSG_TRUNC" ref="0xb7548728" loc="192:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:127" name="_SC_XBS5_LP64_OFF64" ref="0xb7598808" loc="344:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:82" name="_SC_THREAD_PROCESS_SHARED" ref="0xb759e688" loc="247:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0xb78545b0" loc="790:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0xb782b520" loc="1257:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0xb7829738" loc="1282:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="_SC_XOPEN_XPG2" ref="0xb759b450" loc="283:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="MSG_ERRQUEUE" ref="0xb75476e0" loc="208:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0xb78421e0" loc="996:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:184" name="_SC_TRACE_LOG" ref="0xb7590400" loc="462:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="IPPROTO_ROUTING" ref="0xb75285a0" loc="103:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="IPPORT_DAYTIME" ref="0xb7527c50" loc="127:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="_PC_NO_TRUNC" ref="0xb75b0808" loc="40:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="IPPROTO_ESP" ref="0xb752a878" loc="70:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:239" name="_SC_V7_LP64_OFF64" ref="0xb758d010" loc="506:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0xb7856ba0" loc="772:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0xb7876d50" loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0xb785f3a0" loc="720:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_SC_CLK_TCK" ref="0xb75ae988" loc="77:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0xb78415e8" loc="1011:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0xb7864d48" loc="680:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="IPPROTO_COMP" ref="0xb7529548" loc="82:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="IPPROTO_PUP" ref="0xb752b820" loc="54:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="_PC_SYNC_IO" ref="0xb75b0b68" loc="44:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="_SC_POLL" ref="0xb75a1258" loc="195:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0xb786f888" loc="160:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:62" name="_SC_PII_INTERNET_DGRAM" ref="0xb75a1c60" loc="205:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0xb781ca78" loc="130:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="IPPORT_DISCARD" ref="0xb7527818" loc="125:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0xb742db68" loc="212:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0xb7aded60" loc="180:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1127" name="_CS_POSIX_V6_LP64_OFF64_LINTFLAGS" ref="0xb75821a8" loc="627:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0xb78358d0" loc="1147:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0xb7832010" loc="1175:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0xb7830710" loc="1203:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0xb782edd8" loc="1231:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0xb7852600" loc="812:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0xb7848e90" loc="934:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0xb78301c0" loc="1198:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0xb7855cb0" loc="783:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0xb78449a0" loc="979:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0xb782e8a8" loc="1226:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0xb782b010" loc="1254:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0xb7871010" loc="119:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0xb783c270" loc="1064:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0xb780f578" loc="56:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="_SC_SEM_NSEMS_MAX" ref="0xb75a92c8" loc="138:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0xb7844d38" loc="983:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:118" name="_SC_USHRT_MAX" ref="0xb7599750" loc="324:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0xb784e3c8" loc="857:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="MSG_CONFIRM" ref="0xb75472f8" loc="204:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="MSG_NOSIGNAL" ref="0xb75478f0" loc="210:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="IPPORT_NAMESERVER" ref="0xb7526940" loc="133:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0xb743b2f8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="_SC_NL_TEXTMAX" ref="0xb75981f8" loc="337:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0xb7860648" loc="711:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0xb7840208" loc="1020:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="IPPORT_TELNET" ref="0xb75262c0" loc="130:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:248" name="_SC_THREAD_ROBUST_PRIO_PROTECT" ref="0xb758c400" loc="528:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0xb7853d10" loc="807:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0xb786edc8" loc="188:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0xb7aaf6a8" loc="62:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_CS_GNU_LIBC_VERSION" ref="0xb75895e0" loc="542:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0xb7874b90" loc="111:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0xb78610e0" loc="695:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0xb784e750" loc="859:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0xb7849740" loc="915:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0xb7849918" loc="918:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0xb783b7b8" loc="1078:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0xb78373d8" loc="1122:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0xb786ba98" loc="253:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:181" name="_SC_TRACE" ref="0xb7591e28" loc="456:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="_SC_UIO_MAXIOV" ref="0xb75a15c0" loc="199:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0xb7818010" loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0xb786c788" loc="226:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0xb7adeb90" loc="179:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0xb783b0a8" loc="1074:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0xb78417a8" loc="1012:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0xb78397d0" loc="1102:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="_SC_AIO_PRIO_DELTA_MAX" ref="0xb75ab5c0" loc="123:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0xb78bc058" loc="105:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:176" name="_SC_V6_ILP32_OFF32" ref="0xb75914d0" loc="445:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0xb780f848" loc="57:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="IPPROTO_IPV6" ref="0xb752a268" loc="64:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0xb7838c98" loc="1116:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0xb7835390" loc="1144:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0xb7833a60" loc="1172:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:147" name="_SC_FILE_LOCKING" ref="0xb7596d98" loc="386:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1000" name="_CS_LFS_CFLAGS" ref="0xb7589ef0" loc="555:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="_PC_SOCK_MAXBUF" ref="0xb75af0f0" loc="50:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0xb785e5b0" loc="734:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0xb782a728" loc="1271:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="IPPORT_EXECSERVER" ref="0xb7525a98" loc="144:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0xb782a010" loc="1265:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0xb7815b78" loc="106:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="IPPORT_SYSTAT" ref="0xb7527a30" loc="126:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0xb7860d68" loc="717:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0xb742c230" loc="215:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0xb78485a8" loc="927:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0xb784f730" loc="848:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0xb7849038" loc="911:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="_SC_SHELL" ref="0xb75930c8" loc="406:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="_SC_XBS5_ILP32_OFF32" ref="0xb7598400" loc="340:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="_SC_CLOCK_SELECTION" ref="0xb7597b78" loc="366:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:189" name="_SC_LEVEL1_DCACHE_ASSOC" ref="0xb7590eb0" loc="473:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1143" name="_CS_POSIX_V7_LP64_OFF64_LINTFLAGS" ref="0xb7580b70" loc="660:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0xb784d790" loc="872:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0xb7aafa50" loc="64:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0xb7841cb0" loc="1015:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="MSG_EOR" ref="0xb7548b10" loc="196:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0xb78513d0" loc="822:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0xb7816010" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1103" name="_CS_XBS5_ILP32_OFF32_LINTFLAGS" ref="0xb7587618" loc="578:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0xb783b428" loc="1076:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="_SC_SYNCHRONIZED_IO" ref="0xb75ac058" loc="101:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:86" name="_SC_AVPHYS_PAGES" ref="0xb759ee40" loc="256:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="_SC_THREADS" ref="0xb75a0590" loc="217:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:191" name="_SC_LEVEL2_CACHE_SIZE" ref="0xb758f370" loc="477:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="_SC_MEMLOCK_RANGE" ref="0xb75ac760" loc="109:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1138" name="_CS_POSIX_V7_ILP32_OFFBIG_LIBS" ref="0xb7581e00" loc="650:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0xb7876930" loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0xb7867d30" loc="322:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="IPPROTO_TCP" ref="0xb752b420" loc="50:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0xb7846ef8" loc="960:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0xb7845458" loc="963:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0xb78442a0" loc="975:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0xb783bec8" loc="1084:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0xb7813540" loc="127:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:77" name="_SC_THREAD_ATTR_STACKADDR" ref="0xb759fae0" loc="237:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:91" name="_SC_XOPEN_UNIX" ref="0xb759d7a8" loc="267:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0xb783ec88" loc="1048:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1137" name="_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS" ref="0xb7581b98" loc="648:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0xb7c7cc78" loc="53:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0xb786c9a8" loc="229:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_PC_NAME_MAX" ref="0xb75b00d8" loc="32:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1149" name="_CS_V7_ENV" ref="0xb757f9f8" loc="673:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0xb743b7d0" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0xb784b688" loc="893:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0xb7851910" loc="827:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_CS_V5_WIDTH_RESTRICTED_ENVS" ref="0xb7589a78" loc="547:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1004" name="_CS_LFS64_CFLAGS" ref="0xb7588670" loc="563:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0xb7875430" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0xb78348f8" loc="1158:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0xb78543f0" loc="789:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0xb7850738" loc="837:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0xb7831038" loc="1186:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0xb782f740" loc="1214:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0xb7843630" loc="988:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0xb782de30" loc="1242:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0xb742fe60" loc="188:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="_PC_PRIO_IO" ref="0xb75b0ec8" loc="48:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0xb785db68" loc="750:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0xb78462b0" loc="949:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_SC_CHILD_MAX" ref="0xb75ae7e0" loc="75:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="_PC_FILESIZEBITS" ref="0xb75af2d0" loc="52:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="_SC_2_C_BIND" ref="0xb75a8f08" loc="172:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IPPROTO_ICMP" ref="0xb752dd48" loc="44:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0xb781a9a8" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0xb7845618" loc="964:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0xb7845b78" loc="969:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0xb782f010" loc="1208:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0xb782d710" loc="1236:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1145" name="_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS" ref="0xb757f1a8" loc="664:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0xb7853408" loc="800:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0xb742c010" loc="214:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0xb7b01058" loc="353:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0xb785d438" loc="744:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0xb783fab0" loc="1036:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1144" name="_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS" ref="0xb7580df0" loc="662:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0xb786b248" loc="241:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:88" name="_SC_PASS_MAX" ref="0xb759d1e8" loc="260:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:123" name="_SC_NL_SETMAX" ref="0xb7598030" loc="335:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0xb78390e0" loc="1096:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="_SC_THREAD_CPUTIME" ref="0xb7597f10" loc="370:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="_PC_ASYNC_IO" ref="0xb75b0d20" loc="46:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="_PC_SYMLINK_MAX" ref="0xb75afeb8" loc="64:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:238" name="_SC_V7_ILP32_OFFBIG" ref="0xb758edf8" loc="504:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MSG_OOB" ref="0xb7549d40" loc="177:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="_SC_FSYNC" ref="0xb75ac1f0" loc="103:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0xb7847998" loc="944:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_SC_SAVED_IDS" ref="0xb75ad478" loc="89:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0xb783c998" loc="1068:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0xb78363b8" loc="1133:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0xb7834ab8" loc="1161:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0xb7875c80" loc="90:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0xb786dcb0" loc="213:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="_SC_NL_MSGMAX" ref="0xb7599c98" loc="331:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0xb783e038" loc="1041:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0xb7ade9a8" loc="178:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0xb78617e8" loc="699:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0xb7837cc0" loc="1127:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0xb78343a0" loc="1155:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0xb7832ab8" loc="1183:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0xb782f1e8" loc="1211:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="_SC_CPUTIME" ref="0xb7597d20" loc="368:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1003" name="_CS_LFS_LINTFLAGS" ref="0xb7588490" loc="561:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0xb783c608" loc="1066:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:166" name="_SC_USER_GROUPS" ref="0xb7592228" loc="424:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1106" name="_CS_XBS5_ILP32_OFFBIG_LIBS" ref="0xb7587d10" loc="584:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="IPPROTO_FRAGMENT" ref="0xb75287d8" loc="105:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0xb7838058" loc="1107:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0xb784c0a8" loc="877:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0xb784a560" loc="903:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1142" name="_CS_POSIX_V7_LP64_OFF64_LIBS" ref="0xb75808e8" loc="658:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0xb7856648" loc="769:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1146" name="_CS_POSIX_V7_LPBIG_OFFBIG_LIBS" ref="0xb757f410" loc="666:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0xb78627f0" loc="688:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0xb780f288" loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:245" name="_SC_TRACE_USER_EVENT_MAX" ref="0xb758dc10" loc="520:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0xb7814010" loc="108:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SOCK_SEQPACKET" ref="0xb754dd60" loc="36:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0xb743c9c0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0xb784d228" loc="867:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0xb784c7f8" loc="883:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:198" name="_SC_LEVEL4_CACHE_ASSOC" ref="0xb758e270" loc="491:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0xb78560f0" loc="764:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="_SC_BC_BASE_MAX" ref="0xb75a9a30" loc="149:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0xb7869878" loc="279:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0xb785e058" loc="731:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0xb79e9968" loc="101:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0xb7829038" loc="1276:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0xb7828728" loc="1295:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0xb7814aa0" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="_PC_CHOWN_RESTRICTED" ref="0xb75b0650" loc="38:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="_SC_BC_DIM_MAX" ref="0xb75a9bf8" loc="151:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1102" name="_CS_XBS5_ILP32_OFF32_LIBS" ref="0xb75873b0" loc="576:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0xb784e038" loc="855:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0xb7849e70" loc="921:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0xb7816240" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0xb781abb0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="IPPORT_FTP" ref="0xb75260a8" loc="129:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0xb742cdb0" loc="220:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="MSG_MORE" ref="0xb7547ad8" loc="212:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="_SC_MQ_PRIO_MAX" ref="0xb75abb50" loc="129:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0xb7850c58" loc="840:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0xb7870998" loc="145:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0xb7864478" loc="675:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0xb743ba48" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0xb7874dc0" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:186" name="_SC_LEVEL1_ICACHE_ASSOC" ref="0xb7590838" loc="467:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0xb78bd308" loc="96:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_CS_GNU_LIBPTHREAD_VERSION" ref="0xb7589820" loc="544:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0xb7877638" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MSG_PEEK" ref="0xb7549f28" loc="179:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0xb7af9428" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0xb7847270" loc="938:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0xb7840038" loc="1017:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0xb7833520" loc="1167:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0xb7846d38" loc="957:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0xb7831c48" loc="1195:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0xb782e398" loc="1223:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0xb782cab8" loc="1251:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1121" name="_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS" ref="0xb75841c0" loc="615:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SCM_RIGHTS" ref="0xb7544770" loc="305:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0xb742cb50" loc="219:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:173" name="_SC_SYMLOOP_MAX" ref="0xb7592f18" loc="438:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0xb783a438" loc="1087:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0xb78622b0" loc="685:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0xb7855910" loc="781:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0xb7851e58" loc="830:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0xb7844ef8" loc="984:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0xb783e740" loc="1045:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0xb781ccd8" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0xb7851c90" loc="829:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="IPPROTO_IDP" ref="0xb752bc20" loc="58:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0xb7868788" loc="292:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0xb783d950" loc="1057:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0xb7875860" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="_SC_SPIN_LOCKS" ref="0xb7595b90" loc="400:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0xb782c730" loc="1247:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0xb784fab0" loc="850:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0xb785c480" loc="755:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1116" name="_CS_POSIX_V6_ILP32_OFF32_CFLAGS" ref="0xb7585538" loc="605:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:141" name="_SC_DEVICE_SPECIFIC" ref="0xb75962e8" loc="374:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="IPPROTO_MAX" ref="0xb7528010" loc="92:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0xb7add010" loc="181:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:162" name="_SC_SYSTEM_DATABASE" ref="0xb7593a38" loc="416:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0xb783d228" loc="1053:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0xb783b988" loc="1081:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0xb78760a8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1148" name="_CS_V6_ENV" ref="0xb757f848" loc="671:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="MSG_RST" ref="0xb75474d0" loc="206:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0xb7afcd40" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0xb7838758" loc="1113:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0xb78c11e0" loc="27:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0xb7836df8" loc="1141:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1114" name="_CS_XBS5_LPBIG_OFFBIG_LIBS" ref="0xb7585058" loc="600:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0xb785eea8" loc="741:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:536870912" name="MSG_FASTOPEN" ref="0xb7547f18" loc="216:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0xb782ba60" loc="1262:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0xb7868560" loc="289:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:194" name="_SC_LEVEL3_CACHE_SIZE" ref="0xb758f9d0" loc="483:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="_SC_EXPR_NEST_MAX" ref="0xb75a85f8" loc="161:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0xb743a6e0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_PC_LINK_MAX" ref="0xb75b1b40" loc="26:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0xb78bddb0" loc="104:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1134" name="_CS_POSIX_V7_ILP32_OFF32_LIBS" ref="0xb7581400" loc="642:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1120" name="_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS" ref="0xb7585f28" loc="613:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0xb786f678" loc="157:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0xb786d660" loc="202:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="IPPORT_RESERVED" ref="0xb7524a50" loc="155:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:163" name="_SC_SYSTEM_DATABASE_R" ref="0xb7593c48" loc="418:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0xb7843ba0" loc="993:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0xb786bec8" loc="255:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0xb7b02628" loc="223:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0xb7afd5f8" loc="49:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0xb78137a8" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0xb78bd0a8" loc="95:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0xb786c130" loc="219:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:520" name="IPPORT_EFSSERVER" ref="0xb7524168" loc="147:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="IPPORT_TFTP" ref="0xb7525010" loc="137:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0xb78520b0" loc="809:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0xb7852e90" loc="819:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0xb7829a98" loc="1284:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0xb7853058" loc="796:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="IPPROTO_RAW" ref="0xb7529d90" loc="90:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0xb78764e0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0xb7855010" loc="774:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0xb7fad9c8" loc="55:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0xb7b02418" loc="220:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0xb784b118" loc="890:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0xb7875220" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0xb785f730" loc="722:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0xb781b9b8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0xb743c4e0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0xb7841b00" loc="1014:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0xb783f8f0" loc="1035:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0xb7818d50" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="_SC_PII_SOCKET" ref="0xb75a2cd0" loc="189:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0xb79e1010" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0xb7869448" loc="277:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0xb7841e60" loc="1016:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_SC_OPEN_MAX" ref="0xb75aed10" loc="81:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="_SC_ASYNCHRONOUS_IO" ref="0xb75adc38" loc="97:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0xb781b758" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0xb782a550" loc="1268:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0xb78281d0" loc="1290:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0xb742fc20" loc="187:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0xb7819450" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0xb783fc78" loc="1037:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0xb7852970" loc="816:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0xb783cb58" loc="1071:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="_SC_TIMER_MAX" ref="0xb75a9850" loc="144:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="IPPORT_WHOIS" ref="0xb7526b50" loc="134:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0xb743b560" loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0xb7832390" loc="1177:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0xb7830a90" loc="1205:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0xb782d1d0" loc="1233:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0xb7854938" loc="792:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0xb7848b00" loc="932:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0xb782ec08" loc="1228:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0xb782b370" loc="1256:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0xb786e348" loc="173:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0xb78432a0" loc="986:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0xb7829588" loc="1281:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:96" name="_SC_2_C_VERSION" ref="0xb759b0f0" loc="278:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0xb7871c90" loc="135:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:178" name="_SC_V6_LP64_OFF64" ref="0xb75918b0" loc="449:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0xb742b030" loc="221:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="_SC_TIMERS" ref="0xb75ada40" loc="95:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0xb7aaf878" loc="63:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0xb784a720" loc="904:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="_PC_2_SYMLINKS" ref="0xb75ae0f8" loc="66:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1126" name="_CS_POSIX_V6_LP64_OFF64_LIBS" ref="0xb7584df0" loc="625:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:198" name="SIM_LOG_OUTPUT_COUNT" ref="0xb7a630c0" loc="64:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0xb7845d40" loc="970:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="MSG_DONTWAIT" ref="0xb7548938" loc="194:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0xb743a010" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0xb78bfa18" loc="88:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="IPPROTO_DCCP" ref="0xb752a058" loc="62:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0xb78447e0" loc="978:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="_SC_SEMAPHORES" ref="0xb75acd30" loc="115:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="_SC_GETGR_R_SIZE_MAX" ref="0xb75a09d0" loc="221:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0xb7854770" loc="791:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0xb7840900" loc="1024:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0xb786d880" loc="207:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0xb7855740" loc="780:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0xb78293c8" loc="1278:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0xb7828ab8" loc="1297:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0xb7439100" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0xb7861460" loc="697:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0xb7861b80" loc="703:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0xb7aaf108" loc="59:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0xb784ead0" loc="861:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0xb784ac78" loc="909:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0xb7870780" loc="144:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0xb7848058" loc="922:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0xb7837768" loc="1124:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0xb7835e30" loc="1152:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:71" name="_SC_LOGIN_NAME_MAX" ref="0xb75a0dc8" loc="225:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1130" name="_CS_POSIX_V6_LPBIG_OFFBIG_LIBS" ref="0xb7582918" loc="633:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="_SC_MB_LEN_MAX" ref="0xb759a600" loc="304:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0xb7839b30" loc="1104:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:241" name="_SC_SS_REPL_MAX" ref="0xb758d3d8" loc="511:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="_SC_NL_LANGMAX" ref="0xb7599ad8" loc="329:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:513" name="IPPORT_LOGINSERVER" ref="0xb7525ce0" loc="145:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0xb7837038" loc="1118:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0xb784c288" loc="880:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0xb7835710" loc="1146:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0xb785cb98" loc="761:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0xb7833de0" loc="1174:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0xb7830550" loc="1202:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="_SC_XBS5_ILP32_OFFBIG" ref="0xb7598610" loc="342:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0xb7affdf8" loc="48:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_LORA_COUNT_MSG" ref="0xb7897960" loc="19:LoraWAN.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0xb785e220" loc="732:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0xb782aab8" loc="1273:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="_SC_PII_INTERNET" ref="0xb75a2eb0" loc="191:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0xb78649c8" loc="678:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0xb784cd60" loc="886:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SOCK_RAW" ref="0xb754d958" loc="32:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0xb7860808" loc="712:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0xb7819218" loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0xb784db20" loc="874:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0xb78457e8" loc="965:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0xb786a358" loc="261:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0xb7871870" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1131" name="_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS" ref="0xb7582bb0" loc="635:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0xb783f3c0" loc="1032:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:243" name="_SC_TRACE_NAME_MAX" ref="0xb758d7f8" loc="516:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="IPPORT_NETSTAT" ref="0xb7527e70" loc="128:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_PC_PATH_MAX" ref="0xb75b0290" loc="34:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0xb78678f8" loc="316:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:174" name="_SC_STREAMS" ref="0xb75910d8" loc="440:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="IPPROTO_IGMP" ref="0xb752b010" loc="46:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:159" name="_SC_SPAWN" ref="0xb7593408" loc="410:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0xb78508f8" loc="838:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0xb784ba28" loc="895:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0xb7845f10" loc="973:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:196" name="_SC_LEVEL3_CACHE_LINESIZE" ref="0xb758fe20" loc="487:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0xb7840740" loc="1023:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0xb7874120" loc="96:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0xb78602b0" loc="707:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:87" name="IPPORT_TTYLINK" ref="0xb7525640" loc="140:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="_SC_DELAYTIMER_MAX" ref="0xb75ab7b0" loc="125:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0xb7854e80" loc="795:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0xb784fe40" loc="854:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0xb78313c8" loc="1188:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0xb782fad0" loc="1216:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0xb782c1d8" loc="1244:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:240" name="_SC_V7_LPBIG_OFFBIG" ref="0xb758d208" loc="508:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0xb781b2f0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:183" name="_SC_TRACE_INHERIT" ref="0xb7590240" loc="460:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0xb7841950" loc="1013:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0xb7b02010" loc="214:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:175" name="_SC_2_PBS_CHECKPOINT" ref="0xb75912e0" loc="442:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0xb743aea8" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0xb783cec8" loc="1073:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0xb781a010" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1140" name="_CS_POSIX_V7_LP64_OFF64_CFLAGS" ref="0xb7580420" loc="654:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0xb743a8f0" loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0xb742f9d8" loc="186:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0xb79e2010" loc="54:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0xb7844460" loc="976:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="_SC_NETWORKING" ref="0xb75957a8" loc="396:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0xb7816470" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0xb7871650" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0xb781a598" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0xb79e16b0" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0xb782da90" loc="1238:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_PC_MAX_CANON" ref="0xb75b1d00" loc="28:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0xb785d0a8" loc="742:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:76" name="_SC_THREAD_THREADS_MAX" ref="0xb759f8a8" loc="235:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="_SC_2_VERSION" ref="0xb75a8d50" loc="170:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="_SC_PII_OSI" ref="0xb75a10c8" loc="193:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1112" name="_CS_XBS5_LPBIG_OFFBIG_CFLAGS" ref="0xb7586b80" loc="596:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0xb783ee68" loc="1051:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="_SC_PRIORITY_SCHEDULING" ref="0xb75ad8a0" loc="93:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0xb78553a0" loc="776:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="_SC_XOPEN_REALTIME" ref="0xb7598de8" loc="351:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_CS_PATH" ref="0xb7589180" loc="535:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0xb7850038" loc="831:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0xb783eac8" loc="1047:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0xb781b550" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0xb7847d28" loc="946:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0xb7836718" loc="1135:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0xb7834e18" loc="1163:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0xb7831588" loc="1191:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:80" name="_SC_THREAD_PRIO_INHERIT" ref="0xb759e230" loc="243:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0xb78bd578" loc="97:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0xb7afc588" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1136" name="_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS" ref="0xb7581910" loc="646:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="IPPROTO_UDPLITE" ref="0xb7529980" loc="86:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0xb784d058" loc="866:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0xb7877a38" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="_SC_XOPEN_XPG3" ref="0xb759b618" loc="285:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0xb7852270" loc="810:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0xb78410a8" loc="1006:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0xb783d788" loc="1056:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="_SC_COLL_WEIGHTS_MAX" ref="0xb75a8218" loc="157:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0xb786f010" loc="150:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0xb7842760" loc="1001:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_CS_V6_WIDTH_RESTRICTED_ENVS" ref="0xb75893d8" loc="538:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0xb78569d8" loc="771:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0xb7862b70" loc="690:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0xb783f1f8" loc="1031:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0xb786c350" loc="222:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0xb742dd80" loc="213:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0xb784cb98" loc="885:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0xb7fad468" loc="52:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0xb7fad7f0" loc="54:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0xb785f1d8" loc="719:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0xb7856470" loc="766:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0xb7851590" loc="823:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="_SC_2_LOCALEDEF" ref="0xb75a27e0" loc="182:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0xb7869228" loc="274:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="_SC_ADVISORY_INFO" ref="0xb7597240" loc="356:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0xb784bdb8" loc="897:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="_SC_2_UPE" ref="0xb759b288" loc="280:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:171" name="_SC_2_PBS_MESSAGE" ref="0xb7592b78" loc="434:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:242" name="_SC_TRACE_EVENT_NAME_MAX" ref="0xb758d608" loc="514:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0xb7439ac8" loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1110" name="_CS_XBS5_LP64_OFF64_LIBS" ref="0xb75866c8" loc="592:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0xb78123b0" loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0xb783dec8" loc="1062:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0xb78c2e40" loc="15:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0xb7817470" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0xb7fad628" loc="53:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:235" name="_SC_IPV6" ref="0xb758e840" loc="497:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0xb7830010" loc="1197:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0xb7853b40" loc="804:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0xb782e6f8" loc="1225:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0xb782ce18" loc="1253:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="_PC_REC_XFER_ALIGN" ref="0xb75afaf8" loc="60:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0xb7af83c0" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="_SC_SEM_VALUE_MAX" ref="0xb75a94b0" loc="140:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="MSG_WAITALL" ref="0xb7548d10" loc="198:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0xb7877e70" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0xb783d3f0" loc="1054:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0xb7871220" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="IPPROTO_NONE" ref="0xb7528c08" loc="109:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0xb784e200" loc="856:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0xb7aaf4d8" loc="61:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SHUT_RDWR" ref="0xb75418a0" loc="58:/usr/include/i386-linux-gnu/sys/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0xb7817010" loc="79:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0xb7816870" loc="90:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0xb783b5f0" loc="1077:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0xb7874550" loc="102:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0xb7862f08" loc="694:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0xb7849580" loc="914:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0xb7837210" loc="1121:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="_SC_CHAR_BIT" ref="0xb759b998" loc="290:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="_SC_UCHAR_MAX" ref="0xb7599218" loc="318:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0xb786b458" loc="244:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="IPPROTO_RSVP" ref="0xb752a478" loc="66:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0xb786d010" loc="191:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0xb7839620" loc="1101:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0xb786e778" loc="179:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0xb786a790" loc="267:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0xb7814658" loc="111:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0xb7838ad8" loc="1115:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0xb78351d0" loc="1143:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0xb78338a0" loc="1171:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="_SC_STREAM_MAX" ref="0xb75aeed8" loc="83:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="IPPROTO_ENCAP" ref="0xb7529138" loc="78:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0xb785eb08" loc="737:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0xb782bde0" loc="1264:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="IPPROTO_TP" ref="0xb752be18" loc="60:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0xb7848768" loc="928:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0xb7440aa8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:81" name="_SC_THREAD_PRIO_PROTECT" ref="0xb759e450" loc="245:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0xb78c1410" loc="28:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0xb784d5c8" loc="871:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0xb742b500" loc="223:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0xb78501f8" loc="834:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:170" name="_SC_2_PBS_LOCATE" ref="0xb7592990" loc="432:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="_SC_MEMLOCK" ref="0xb75ac578" loc="107:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0xb7841278" loc="1007:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0xb783c438" loc="1065:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="IPPROTO_IPIP" ref="0xb752b220" loc="48:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1006" name="_CS_LFS64_LIBS" ref="0xb7588a20" loc="567:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="IPPORT_BIFFUDP" ref="0xb7524398" loc="150:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0xb7876708" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0xb78674a8" loc="310:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0xb7875010" loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0xb7841438" loc="1010:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0xb781cf18" loc="132:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0xb7839460" loc="1098:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0xb79e9518" loc="94:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0xb783e3c0" loc="1043:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0xb784b4b8" loc="892:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:110" name="_SC_SSIZE_MAX" ref="0xb759a958" loc="308:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0xb785fac0" loc="724:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:66" name="_SC_T_IOV_MAX" ref="0xb75a03d8" loc="213:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0xb787bda8" loc="30:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0xb7874970" loc="108:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1117" name="_CS_POSIX_V6_ILP32_OFF32_LDFLAGS" ref="0xb75857b8" loc="607:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0xb784ee60" loc="865:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="SOCK_PACKET" ref="0xb754c210" loc="41:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="SOCK_NONBLOCK" ref="0xb754c668" loc="52:/usr/include/i386-linux-gnu/bits/socket_type.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0xb7834730" loc="1157:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0xb7850578" loc="836:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0xb7832e48" loc="1185:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0xb7843468" loc="987:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0xb782f578" loc="1213:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0xb782dc68" loc="1241:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:167" name="_SC_USER_GROUPS_R" ref="0xb7592410" loc="426:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0xb7864638" loc="676:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65536" name="MSG_WAITFORONE" ref="0xb7547d00" loc="214:/usr/include/i386-linux-gnu/bits/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0xb7876b40" loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0xb7828550" loc="1292:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0xb785dd30" loc="751:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0xb7a83208" loc="76:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0xb7830e10" loc="1207:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0xb79e2aa8" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0xb7c7ce00" loc="54:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0xb782d550" loc="1235:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0xb7871430" loc="125:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0xb7847608" loc="942:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0xb786c568" loc="223:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:199" name="_SC_LEVEL4_CACHE_LINESIZE" ref="0xb758e4a8" loc="493:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0xb78535d8" loc="801:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0xb7afb510" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0xb785d990" loc="747:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0xb7840c80" loc="1026:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:90" name="_SC_XOPEN_XCU_VERSION" ref="0xb759d5e0" loc="265:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0xb784aaa0" loc="906:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="IPPROTO_GRE" ref="0xb752a678" loc="68:/usr/include/netinet/in.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SC_ARG_MAX" ref="0xb75ae620" loc="73:/usr/include/i386-linux-gnu/bits/confname.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0xb78437f8" loc="989:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0xb783aee8" loc="1095:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0xb78953d8" loc="56:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="NUM_TASKS" ref="0xb7895200" loc="55:/opt/tinyos-main-2.1.2/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0xb76f1b60" loc="101:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0xb76f1248" loc="145:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0xb7693428" loc="96:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="NUM_CLIENTS" ref="0xb7491780" loc="48:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0xb7490c50" loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0xb748f620" loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0xb73f4ef8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0xb73f30f0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0xb732d970" loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0xb7308010" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0xb7311748" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0xb730ade8" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0xb7d91340" loc="125:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="intptr_t" ref="0xb7d91340"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0xb78b9010" loc="134:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0xb78ba968"/>
        <typename><typedef-ref name="serial_packet_t" ref="0xb78b9010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0xb74288c8" loc="247:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7428010"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0xb74288c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0xb7c3a2a0" loc="234:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0xb7c3a2a0"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0xb7faf6d8" loc="324:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0xb7faf6d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0xb78155d8" loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7815350"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0xb78155d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0xb7c510a8" loc="151:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0xb7c510a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0xb78c0688" loc="16:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0xb78c02d0"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0xb78c0688"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0xb7c79a18" loc="46:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0xb7c79a18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0xb7c79108" loc="38:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0xb7c79108"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0xb78ba760" loc="129:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0xb78bbce8"/>
        <typename><typedef-ref name="serial_header_t" ref="0xb78ba760"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0xb75ce450" loc="42:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb75ce288"/>
        <typename><typedef-ref name="TMilli" ref="0xb75ce450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__u_char" ref="0xb7c7b3c0" loc="30:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0xb7c7b3c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0xb7437830" loc="111:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0xb7437830"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0xb7425388" loc="278:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0xb7425388"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0xb7c71e00" loc="186:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__intptr_t" ref="0xb7c71e00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0xb7c719b8" loc="182:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0xb7c79f18"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0xb7c719b8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0xb74352c0" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0xb74352c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0xb7c4da58" loc="75:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0xb7c4d890"/>
        <typename><typedef-ref name="fd_set" ref="0xb7c4da58"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0xb7a83748" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7a83748"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0xb7c71be0" loc="183:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0xb7c71be0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0xb7c75a28" loc="139:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__time_t" ref="0xb7c75a28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0xb7c72f28" loc="172:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ssize_t" ref="0xb7c72f28"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0xb7bf4870" loc="35:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0xb7bf4870"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0xb7c56b60" loc="70:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0xb7c56b60"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0xb7427b88" loc="262:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7427630"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0xb7427b88"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0xb7ae0eb0" loc="150:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0xb7ae0eb0"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0xb7d94048" loc="67:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0xb7d94048"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0xb7fb2028"  loc="NONE">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0xb7fb9f48"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0xb7c797b0" loc="41:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0xb7c797b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0xb75cecd0" loc="44:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb75ceb08"/>
        <typename><typedef-ref name="TMicro" ref="0xb75cecd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsword_t" ref="0xb7c72d00" loc="170:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsword_t" ref="0xb7c72d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0xb7c72800" loc="166:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0xb7c72800"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0xb7c56db0" loc="75:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="nlink_t" ref="0xb7c56db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0xb7c542c0" loc="59:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clock_t" ref="0xb7c542c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0xb7425100" loc="277:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0xb7425100"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0xb7c3e6d0" loc="160:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7c3e4a8"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0xb7c3e6d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0xb7a2bb28" loc="65:/opt/tinyos-main-2.1.2/tos/lib/tossim/heap.h">
      <documentation loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0xb7a2b570"/>
        <typename><typedef-ref name="heap_t" ref="0xb7a2bb28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="lora_msg_t" ref="0xb7897620" loc="13:LoraWAN.h">
      <type-tag size="I:5" alignment="I:1"><nx_struct-ref name="lora_msg" ref="0xb7b39bf0"/>
        <typename><typedef-ref name="lora_msg_t" ref="0xb7897620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0xb7c778f8" loc="126:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0xb7c778f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0xb7ca9018" loc="446:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ca9018"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0xb7a65a10" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_log_channel" ref="0xb7a65228"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0xb7a65a10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0xb7c58728" loc="35:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0xb7c58728"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0xb7c3eb78" loc="168:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0xb7c3eb78"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0xb7c512a0" loc="152:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0xb7c512a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0xb78c28a0" loc="11:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0xb78c28a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0xb7427eb8" loc="265:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7427630"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0xb7427eb8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0xb7d94548" loc="76:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0xb7d94548"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0xb7c76e50" loc="134:/usr/include/i386-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7c76c88"/>
        <typename><typedef-ref name="__fsid_t" ref="0xb7c76e50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast32_t" ref="0xb7d92e48" loc="110:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0xb7d92e48"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0xb7426188" loc="269:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0xb7426188"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0xb7c47c68" loc="228:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blksize_t" ref="0xb7c47c68"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0xb7426920" loc="272:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0xb7426920"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0xb7d942c8" loc="72:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0xb7d942c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0xb7420d38" loc="324:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7420b10"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7420d38"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0xb7c76950" loc="133:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0xb7c76950"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0xb7c7b818" loc="32:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0xb7c7b818"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0xb7435048" loc="115:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0xb7435048"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0xb7426e40" loc="276:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0xb7426e40"/></typename>
      </type-int>
    </typedef>
    <typedef name="in_addr_t" ref="0xb7530e88" loc="30:/usr/include/netinet/in.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="in_addr_t" ref="0xb7530e88"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0xb7a7d820" loc="51:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7a7d5b8"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7a7d820"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0xb79e8340" loc="67:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0xb79e8340"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0xb7c50688" loc="22:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0xb7c50688"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0xb742f618" loc="178:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb742f3f0"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0xb742f618"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0xb7c73158" loc="143:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0xb7c73158"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0xb7c77b48" loc="127:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ino_t" ref="0xb7c77b48"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0xb7d95ba8" loc="65:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0xb7d95ba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0xb7ae49b0" loc="48:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/>
        <typename><typedef-ref name="FILE" ref="0xb7ae49b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0xb7c10750" loc="741:/usr/include/stdlib.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0xb7c10750"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0xb7c9a6b8" loc="39:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0xb7c9b838"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0xb7c9a6b8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0xb7811e18" loc="161:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0xb7811e18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0xb7c76048" loc="129:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0xb7c76048"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0xb7c9a930" loc="42:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0xb7c9b838"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0xb7c9a930"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0xb78bbae0" loc="121:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0xb78bc4f8"/>
        <typename><typedef-ref name="radio_stats_t" ref="0xb78bbae0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0xb7c54828" loc="91:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0xb7c54828"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0xb7423a90" loc="291:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0xb7423a90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0xb7422290" loc="294:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0xb7422290"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0xb7c56920" loc="65:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0xb7c56920"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0xb7c56068" loc="39:/usr/include/i386-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7c76c88"/>
        <typename><typedef-ref name="fsid_t" ref="0xb7c56068"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0xb78cc990" loc="59:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0xb78cc7a8"/>
        <typename><typedef-ref name="sim_packet_t" ref="0xb78cc990"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0xb7811928" loc="158:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7811580"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0xb7811928"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0xb7fa78f8" loc="36:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0xb7fa78f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0xb7a65010" loc="54:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.c">
      <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0xb7a66ab8"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0xb7a65010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0xb7c4ff28" loc="48:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0xb7c4ff28"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0xb7c4f0e0" loc="37:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0xb7c50c78"/>
        <typename><typedef-ref name="sigset_t" ref="0xb7c4f0e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0xb75ce890" loc="43:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb75ce6c8"/>
        <typename><typedef-ref name="T32khz" ref="0xb75ce890"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0xb7c58500" loc="34:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0xb7c58500"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0xb78c00c8" loc="12:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0xb78c1638"/>
        <typename><typedef-ref name="tossim_header_t" ref="0xb78c00c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0xb7faf250" loc="147:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ptrdiff_t" ref="0xb7faf250"/></typename>
      </type-int>
    </typedef>
    <typedef name="blkcnt_t" ref="0xb7c47ee0" loc="235:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blkcnt_t" ref="0xb7c47ee0"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0xb75ce010" loc="41:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb764be28"/>
        <typename><typedef-ref name="TSecond" ref="0xb75ce010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint32_t" ref="0xb7d956b0" loc="51:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7d956b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0xb7ca9968" loc="448:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0xb7ca9968"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0xb7cae728" loc="435:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0xb7cae728"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0xb7d91568" loc="128:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uintptr_t" ref="0xb7d91568"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0xb7c55d68" loc="116:/usr/include/i386-linux-gnu/sys/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0xb7c55d68"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0xb7c7ba58" loc="33:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_long" ref="0xb7c7ba58"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0xb7d91110" loc="112:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0xb7d91110"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0xb7c79358" loc="39:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0xb7c79358"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0xb7c582b0" loc="33:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0xb7c582b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0xb7426698" loc="271:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0xb7426698"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0xb781d210" loc="120:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0xb781d210"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0xb7d92290" loc="96:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast16_t" ref="0xb7d92290"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0xb7426bb8" loc="275:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0xb7426bb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0xb7425898" loc="280:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0xb7425898"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0xb7ac8068" loc="110:/usr/include/stdio.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0xb7ae1d28"/>
        <typename><typedef-ref name="fpos_t" ref="0xb7ac8068"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0xb7428580" loc="244:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7428010"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0xb7428580"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0xb7c69128" loc="101:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7c6beb8"/>
        <typename><typedef-ref name="div_t" ref="0xb7c69128"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0xb79915d0" loc="6:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0xb7991148"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0xb79915d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0xb7faf488" loc="212:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
      </type-int>
    </typedef>
    <typedef name="socklen_t" ref="0xb75cc948" loc="277:/usr/include/unistd.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="socklen_t" ref="0xb75cc948"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0xb7c7beb0" loc="37:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0xb7c7beb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0xb7c50e40" loc="30:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0xb7c50c78"/>
        <typename><typedef-ref name="__sigset_t" ref="0xb7c50e40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0xb74375b0" loc="110:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7438e40"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0xb74375b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0xb7c71738" loc="181:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0xb7c71738"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0xb7c77dd8" loc="128:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0xb7c77dd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0xb78c4dc0" loc="6:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0xb78c4dc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0xb78b9db8" loc="53:/opt/tinyos-main-2.1.2/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0xb78b97e8"/>
        <typename><typedef-ref name="message_header_t" ref="0xb78b9db8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0xb7998400" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0xb7999d60"/>
        <typename><typedef-ref name="gain_entry_t" ref="0xb7998400"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0xb78c2b00" loc="12:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0xb78c2b00"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0xb7cafe50" loc="433:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0xb7cafe50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0xb7811ba0" loc="160:/opt/tinyos-main-2.1.2/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0xb7811ba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0xb7d948c0" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0xb7d948c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0xb7ad46e0" loc="353:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0xb7ad46e0"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0xb7d95250" loc="48:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7d95250"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0xb7c54560" loc="75:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="time_t" ref="0xb7c54560"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0xb7cac918" loc="441:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0xb7cac918"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0xb7c69d20" loc="121:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0xb7c69af8"/>
        <typename><typedef-ref name="lldiv_t" ref="0xb7c69d20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0xb7ad9998" loc="310:/usr/include/libio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/>
        <typename><typedef-ref name="_IO_FILE" ref="0xb7ad9998"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0xb7c45f20" loc="69:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:36" alignment="I:4"><union-ref name="pthread_attr_t" ref="0xb7c458a8"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0xb7c45f20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0xb7ad4178" loc="350:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0xb7c76740"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0xb7ad4178"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0xb7c55460" loc="98:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0xb7c55460"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0xb7c54aa8" loc="103:/usr/include/time.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0xb7c54aa8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0xb7c3a010" loc="228:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:4"><union-ref ref="0xb7c3cd28"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0xb7c3a010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uint64_t" ref="0xb7c79ca8" loc="47:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0xb7c79ca8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0xb7437aa8" loc="112:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0xb7437aa8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0xb7c77498" loc="124:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0xb7c77498"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0xb7cab258" loc="443:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0xb7cab258"/></typename>
      </type-int>
    </typedef>
    <typedef name="va_list" ref="0xb7ac9dd0" loc="79:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0xb7fb9f48"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0xb7ac9dd0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__off_t" ref="0xb7c764c0" loc="131:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__off_t" ref="0xb7c764c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0xb7d92068" loc="90:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0xb7d92068"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0xb7c73ce0" loc="158:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blkcnt_t" ref="0xb7c73ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0xb78bf3e8" loc="22:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0xb78c08a0"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0xb78bf3e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__syscall_ulong_t" ref="0xb7c714a8" loc="177:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__syscall_ulong_t" ref="0xb7c714a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="in_port_t" ref="0xb75272d8" loc="119:/usr/include/netinet/in.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="in_port_t" ref="0xb75272d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0xb78c2648" loc="10:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0xb78c2648"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0xb7d917c8" loc="138:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0xb7d917c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0xb7428238" loc="241:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7428010"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7428238"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0xb7437db0" loc="114:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7438e40"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0xb7437db0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0xb78b95d8" loc="138:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0xb78b9228"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0xb78b95d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0xb7c722a8" loc="162:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0xb7c722a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0xb7d95490" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0xb7d95490"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0xb7ae0010" loc="25:/usr/include/_G_config.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0xb7ae1d28"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0xb7ae0010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0xb7c51608" loc="200:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0xb7c51608"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0xb7426410" loc="270:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0xb7426410"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0xb7423578" loc="287:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0xb7423578"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0xb78c2178" loc="7:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0xb78c2178"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0xb7c73808" loc="150:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0xb7c73808"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0xb78b7a50" loc="61:/opt/tinyos-main-2.1.2/tos/lib/tossim/platform_message.h">
      <type-tag size="I:4" alignment="I:1"><union-ref name="message_metadata" ref="0xb78b7630"/>
        <typename><typedef-ref name="message_metadata_t" ref="0xb78b7a50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0xb7ad6800" loc="341:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0xb7c72f28"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0xb7ad6800"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0xb7c4dcc8" loc="82:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0xb7c4dcc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0xb7cac030" loc="437:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0xb7cac030"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0xb7a6def8" loc="10:/opt/tinyos-main-2.1.2/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0xb7a6dc90"/>
        <typename><typedef-ref name="hashtable_t" ref="0xb7a6def8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0xb7c566f8" loc="60:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0xb7c566f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0xb7c771c0" loc="56:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0xb7c771c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0xb7c51ca8" loc="202:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0xb7c51ca8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0xb7c45420" loc="243:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0xb7c45420"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0xb7d929a8" loc="103:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0xb7d929a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0xb7c7b010" loc="55:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0xb7c7c9f8"/>
        <typename><typedef-ref name="idtype_t" ref="0xb7c7b010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__rlim64_t" ref="0xb7c755c0" loc="137:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0xb7c755c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__key_t" ref="0xb7c73368" loc="144:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0xb7c73368"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0xb7c75c90" loc="140:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0xb7c75c90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0xb7434428" loc="130:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7434200"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0xb7434428"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0xb74232f0" loc="286:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0xb74232f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0xb7ad7e08" loc="333:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0xb7c72f28"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0xb7faf488"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0xb7ad7e08"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0xb7caf9f8" loc="432:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0xb7caf9f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0xb7d91e40" loc="34:/usr/include/inttypes.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0xb7d91e40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0xb7423d10" loc="292:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0xb7423d10"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0xb7c50360" loc="205:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="register_t" ref="0xb7c50360"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0xb7c390c8" loc="249:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7c3ae40"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0xb7c390c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0xb7421810" loc="309:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb74215e8"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7421810"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0xb74370c8" loc="108:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7438e40"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb74370c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0xb7c558c8" loc="109:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ssize_t" ref="0xb7c558c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0xb7c79f18" loc="55:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0xb7c79f18"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0xb7fa7d78" loc="38:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0xb7fa7d78"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0xb7d95920" loc="58:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0xb7d95920"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0xb7c58968" loc="36:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_long" ref="0xb7c58968"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0xb7824a08" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0xb7824a08"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0xb7b012c0" loc="354:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0xb7b02838"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0xb7b012c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0xb7cab6d8" loc="444:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0xb7cab6d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0xb7cacd98" loc="442:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0xb7cacd98"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0xb7c456a8" loc="60:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_t" ref="0xb7c456a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0xb7c73a70" loc="153:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blksize_t" ref="0xb7c73a70"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0xb7d8e5d8" loc="284:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0xb7d8e3b0"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0xb7d8e5d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0xb7c76290" loc="130:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__nlink_t" ref="0xb7c76290"/></typename>
      </type-int>
    </typedef>
    <typedef name="__id_t" ref="0xb7c757e8" loc="138:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0xb7c757e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0xb7d94b18" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0xb7d94b18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0xb7ae18b0" loc="94:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7ae1688"/>
        <typename><typedef-ref name="__mbstate_t" ref="0xb7ae18b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0xb742d4b0" loc="205:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb742ef28"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0xb742d4b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0xb78b7408" loc="57:/opt/tinyos-main-2.1.2/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0xb78b7010"/>
        <typename><typedef-ref name="message_footer_t" ref="0xb78b7408"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0xb7423068" loc="285:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0xb7423068"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0xb7c6bb40" loc="71:/usr/include/stdlib.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7c6b800"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0xb7c6bb40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0xb7c72010" loc="159:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0xb7c72010"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0xb7c45190" loc="239:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0xb7c45190"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0xb7c55238" loc="86:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="off_t" ref="0xb7c55238"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0xb7c7b608" loc="31:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0xb7c7b608"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0xb7cae2d0" loc="434:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0xb7cae2d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0xb7c58ba8" loc="37:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0xb7c58ba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0xb7c75f00" loc="141:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__suseconds_t" ref="0xb7c75f00"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0xb7c3a988" loc="243:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:20" alignment="I:4"><union-ref ref="0xb7c3a760"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0xb7c3a988"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sa_family_t" ref="0xb754c980" loc="28:/usr/include/i386-linux-gnu/bits/sockaddr.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="sa_family_t" ref="0xb754c980"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0xb7427858" loc="259:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7427630"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7427858"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0xb7c7bc88" loc="36:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0xb7c7bc88"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0xb7ae06b8" loc="30:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0xb7ae0490"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0xb7ae06b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0xb7c735b0" loc="147:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0xb7c735b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0xb7d92bf8" loc="109:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast16_t" ref="0xb7d92bf8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0xb7425db8" loc="284:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0xb7425db8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0xb7d91a60" loc="140:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0xb7d91a60"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0xb78c2410" loc="8:/opt/tinyos-main-2.1.2/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0xb78c2410"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0xb7c750c8" loc="135:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clock_t" ref="0xb7c750c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0xb7caeba0" loc="436:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0xb7caeba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0xb7c75328" loc="136:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__rlim_t" ref="0xb7c75328"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0xb7c58e10" loc="38:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0xb7c58e10"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0xb7d924b8" loc="97:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0xb7d924b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0xb7d95df8" loc="66:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0xb7d95df8"/></typename>
      </type-int>
    </typedef>
    <typedef name="useconds_t" ref="0xb75cc6d0" loc="258:/usr/include/unistd.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="useconds_t" ref="0xb75cc6d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0xb7c696f0" loc="109:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7c694c8"/>
        <typename><typedef-ref name="ldiv_t" ref="0xb7c696f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0xb7c50010" loc="203:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0xb7c50010"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0xb7c51958" loc="201:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0xb7c51958"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0xb74302f0" loc="163:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb74300c8"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb74302f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0xb742d7f8" loc="208:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb742ef28"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0xb742d7f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0xb7d94dc0" loc="83:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0xb7d94dc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0xb7c79580" loc="40:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0xb7c79580"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0xb7c3c858" loc="222:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:4"><union-ref ref="0xb7c3c5d0"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0xb7c3c858"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0xb7bf4a90" loc="37:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="double_t" ref="0xb7bf4a90"/></typename>
      </type-float>
    </typedef>
    <typedef name="__fd_mask" ref="0xb7c4d170" loc="54:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fd_mask" ref="0xb7c4d170"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0xb7a85d38" loc="65:/opt/tinyos-main-2.1.2/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7a85d38"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0xb7c72568" loc="163:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0xb7c72568"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0xb79e0538" loc="71:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:480" alignment="I:4"><struct-ref name="sim_noise_hash_t" ref="0xb79e18e8"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0xb79e0538"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0xb7ae4c50" loc="64:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7ae4770"/>
        <typename><typedef-ref name="__FILE" ref="0xb7ae4c50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0xb7ae0a10" loc="40:/usr/lib/gcc/i686-linux-gnu/4.8/include/stdarg.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0xb7fb9f48"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0xb7ae0a10"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0xb7cabb58" loc="445:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0xb7cabb58"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0xb7c76740" loc="132:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0xb7c76740"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0xb7422010" loc="293:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0xb7422010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0xb7c72ac0" loc="167:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0xb7c72ac0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0xb7425b30" loc="283:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0xb7425b30"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0xb7423800" loc="288:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0xb7423800"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0xb7d95010" loc="43:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0xb7d95010"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0xb7fa7b88" loc="37:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0xb7fa7b88"/></typename>
      </type-int>
    </typedef>
    <typedef name="saved_msg_t" ref="0xb787b3e8" loc="27:LoraWAN.h">
      <type-tag size="I:15" alignment="I:1"><nx_struct-ref name="saved_msg" ref="0xb7897b60"/>
        <typename><typedef-ref name="saved_msg_t" ref="0xb787b3e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ulong" ref="0xb7c54e38" loc="150:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ulong" ref="0xb7c54e38"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0xb7d92730" loc="99:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0xb7d92730"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0xb7c55010" loc="80:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0xb7c55010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__syscall_slong_t" ref="0xb7c711e0" loc="175:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__syscall_slong_t" ref="0xb7c711e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0xb78b6a30" loc="19:/opt/tinyos-main-2.1.2/tos/types/message.h">
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb78b7c30"/>
        <typename><typedef-ref name="message_t" ref="0xb78b6a30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0xb7cac4a8" loc="438:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0xb7cac4a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0xb7433b78" loc="146:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7433950"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7433b78"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0xb7c562a8" loc="44:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0xb7c562a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0xb7c6f0d8" loc="189:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0xb7c6f0d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0xb7a26168" loc="65:/opt/tinyos-main-2.1.2/tos/lib/tossim/heap.c">
      <type-tag size="I:12" alignment="I:4"><struct-ref name="node" ref="0xb7a27cb0"/>
        <typename><typedef-ref name="node_t" ref="0xb7a26168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0xb7c776c8" loc="125:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0xb7c776c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0xb7caf5a0" loc="431:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0xb7caf5a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0xb79deb50" loc="83:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:68" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0xb79e0820"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0xb79deb50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0xb7c55678" loc="104:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0xb7c55678"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0xb7c411c8" loc="128:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:24" alignment="I:4"><union-ref ref="0xb7c42ef8"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0xb7c411c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0xb79e71e0" loc="120:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0xb79e71e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0xb7c3e010" loc="154:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:4"><union-ref ref="0xb7c40d28"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0xb7c3e010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0xb7c3e930" loc="164:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0xb7c3e930"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0xb7c564d0" loc="48:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ino_t" ref="0xb7c564d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0xb7c55b18" loc="115:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0xb7c55b18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0xb79ec238" loc="61:/usr/include/i386-linux-gnu/sys/time.h">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0xb79ec238"/></typename>
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0xb79edbb0"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0xb7ca94c0" loc="447:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0xb7ca94c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0xb7c54010" loc="122:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0xb7c54010"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0xb7c41890" loc="134:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7c41668"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0xb7c41890"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_slist_t" ref="0xb7c43670" loc="84:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c431c0"/>
        <typename><typedef-ref name="__pthread_slist_t" ref="0xb7c43670"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0xb78bf678" loc="83:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
      <documentation loc="71:/opt/tinyos-main-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0xb78bf678"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0xb742d168" loc="202:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb742ef28"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb742d168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0xb7425610" loc="279:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0xb7425610"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0xb7693830" loc="96:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0xb76f1e68" loc="101:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0xb76f1550" loc="145:/opt/tinyos-main-2.1.2/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0xb7649b58" loc="64:/opt/tinyos-main-2.1.2/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0xb7649878"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0xb7649b58"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0xb748a2f0" loc="57:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0xb748a128"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0xb748a2f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0xb748f010" loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0xb748f928" loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0xb732dc68" loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0xb7311a58" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0xb7308c88" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0xb7308940"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0xb7308c88"/></typename>
      </type-tag>
    </typedef>
  </typedefs>
</nesc>
